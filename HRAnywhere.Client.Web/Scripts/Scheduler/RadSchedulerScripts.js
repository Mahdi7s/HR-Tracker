Type.registerNamespace("Telerik.Web.UI");
(function(d,b){var f;
var e=60000;
var a=e*60;
var g=a*24;
b.RecurrenceState=function(){};
b.RecurrenceState.prototype={NotRecurring:0,Master:1,Occurrence:2,Exception:3};
b.RecurrenceState.registerEnum("Telerik.Web.UI.RecurrenceState");
b.SchedulerAppointment=function(j,h){this._attributes=new b.SchedulerAttributeCollection(this);
this._visible=true;
this._domElement=null;
this._domElements=[];
this._recurrenceState=b.RecurrenceState.NotRecurring;
this._recurrenceRule="";
this._backColor=null;
this._borderStyle="solid";
this._borderColor=null;
this._borderWidth=null;
this._selected=false;
if(!j){return;
}this._serverData=j;
this._id=j.id;
this._subject=j.subject;
this._description=j.description;
this._start=new Date(Date.parse(j.start));
this._end=new Date(Date.parse(j.end));
this._toolTip=j.toolTip;
this._internalID=j.internalID;
this._visible=j.visible;
this._recurrenceState=j.recurrenceState;
this._recurrenceParentID=j.recurrenceParentID;
this._contextMenuID=j.contextMenuID;
this._serializedResources=j.resources;
this._resources=null;
if(j.domElements){for(var l=0,k=j.domElements.length;
l<k;
l++){this._domElements[l]=$get(j.domElements[l]);
}}this._column=null;
this._allowEdit=null;
if(typeof(j.allowEdit)!="undefined"){this._allowEdit=j.allowEdit;
}this._allowDelete=null;
if(typeof(j.allowDelete)!="undefined"){this._allowDelete=j.allowDelete;
}this._owner=h;
this._oldZIndex=null;
this._originalParent=null;
if(typeof(j.attributes)!="undefined"){this._attributes._load(j.attributes);
}};
b.SchedulerAppointment.prototype={get_id:function(){return this._id;
},get_internalID:function(){return this._internalID;
},get_subject:function(){return this._subject;
},set_subject:function(h){this._subject=h;
},get_description:function(){return this._description;
},set_description:function(h){this._description=h;
},get_start:function(){return this._start;
},set_start:function(h){this._start=h;
},get_end:function(){return this._end;
},set_end:function(h){this._end=h;
},get_duration:function(){return this._end-this._start;
},get_durationInMinutes:function(){return Math.round(this.get_duration()/e);
},set_selected:function(i){var h="rsAptSelected";
this._selected=i;
if(i){d(this.get_element()).addClass(h);
}else{d(this.get_element()).removeClass(h);
}},get_selected:function(){return this._selected;
},get_toolTip:function(){return this._toolTip;
},set_toolTip:function(h){this._toolTip=h;
if(this._domElements&&this._domElements.length){d.each(this._domElements,function(){this.title=h;
});
}},get_cssClass:function(){return this._cssClass||"";
},set_cssClass:function(h){this._cssClass=h;
if(this._domElements&&this._domElements.length){d.each(this._domElements,function(){this.className="rsApt";
d(this).addClass(h);
});
}},set_backColor:function(h){this._backColor=h;
var i=d(this.get_element());
var j=i;
if(this._getStyleMode()==b.AppointmentStyleMode.Default){j=d(".rsAptMid, .rsAptContent, .rsAptIn",i);
i.addClass("rsAptColor");
}else{i.addClass("rsAptSimple");
}j.css("background-color",h);
},get_backColor:function(){return this._backColor;
},set_borderStyle:function(h){this._borderStyle=h;
this._renderBorder();
},get_borderStyle:function(){return this._borderStyle;
},set_borderColor:function(h){this._borderColor=h;
this._renderBorder();
},get_borderColor:function(){return this._borderColor;
},set_borderWidth:function(h){if(typeof(h)=="number"){h+="px";
}this._borderWidth=h;
this._renderBorder();
},get_borderWidth:function(){return this._borderWidth;
},get_visible:function(){return this._visible;
},get_radScheduler:function(){return this._owner;
},get_owner:function(){return this._owner;
},_setOwner:function(h){this._owner=h;
},get_allowEdit:function(){return(this._allowEdit==null)?true:this._allowEdit;
},set_allowEdit:function(h){this._allowEdit=h;
},get_allowDelete:function(){return(this._allowDelete==null)?true:this._allowDelete;
},set_allowDelete:function(h){this._allowDelete=h;
},get_element:function(){if(!this._domElement&&this._domElements&&this._domElements.length>0){this._domElement=this._domElements[0];
}return this._domElement;
},get_elements:function(){return this._domElements;
},get_timeSlot:function(){var h=this.get_owner();
if(!h){return null;
}return h.get_activeModel().getTimeSlotForAppointment(this);
},get_attributes:function(){return this._attributes;
},get_recurrenceState:function(){return this._recurrenceState;
},set_recurrenceState:function(h){this._recurrenceState=h;
},get_recurrenceRule:function(){return this._recurrenceRule;
},set_recurrenceRule:function(h){this._recurrenceRule=h;
},get_recurrenceParentID:function(){return this._recurrenceParentID;
},get_resources:function(){if(!this._resources){this._resources=new b.SchedulerResourceCollection();
for(var k in this._serializedResources){var h=this._serializedResources[k];
if(h.text){this._resources.add(new b.SchedulerResource(h));
}else{var j=this.get_owner().get_resources().getResourcesByType(h.type);
var i=this._resources;
j.forEach(function(l){if(l.get_key()==h.key){i.add(l);
}});
}}}return this._resources;
},edit:function(){var h=this.get_owner();
if(h){h.editAppointment(this);
}},remove:function(){var h=this.get_owner();
if(h){h.deleteAppointment(this);
}},compare:function(h){if(this.get_start().getTime()<h.get_start().getTime()){return -1;
}if(this.get_start().getTime()>h.get_start().getTime()){return 1;
}if(this.get_end().getTime()>h.get_end().getTime()){return -1;
}return 0;
},_isAllDay:function(){return this.get_duration()%g==0;
},_isInRange:function(l,i){var k=this.get_start();
var j=this.get_end();
var h=k<i&&j>l;
if(this.get_duration()==0){return h||k.getTime()==l.getTime();
}return h;
},_rangeIsInsideAppointment:function(i,h){return this.get_start()<=i&&this.get_end()>=h;
},_getTimeSlot:function(){if(!this._timeSlot){if(!this.get_owner()){return null;
}this._timeSlot=this.get_owner().get_activeModel().getTimeSlotForAppointment(this);
}return this._timeSlot;
},_getColumn:function(){return this._column;
},_setColumn:function(h){this._column=h;
},_setRowIndex:function(h){this._rowIndex=h;
},_getRowIndex:function(){return this._rowIndex;
},_startDrag:function(){var i=this.get_element();
var j=this.get_owner().get_element();
d(i).css("opacity",0.6);
if($telerik.isIE){d(i).css("padding-bottom","4px");
if($telerik.isIE6){var h=d("div.rsAptResize",i);
if(h.length>0){h.data("opacity",h.css("opacity")).css("opacity","");
}}}j.style.cursor="move";
this._oldZIndex=i.style.zIndex;
i.style.zIndex=999;
this._originalParent=i.parentNode;
Sys.UI.DomElement.removeCssClass(i,"rsWAppointmentDelete");
},_resetDragStyles:function(){var i=this.get_element();
d(i).css("opacity","");
if($telerik.isIE){d(i).css("padding-bottom","0px");
if($telerik.isIE6){var h=d("div.rsAptResize",i);
if(h.length>0){h.css("opacity",h.data("opacity"));
}}}i.style.zindex=this._oldZIndex;
var j=this.get_owner().get_element();
if(j&&j.style){j.style.cursor="";
}},_abortDrag:function(){this._resetDragStyles();
var h=this.get_element();
if(h.parentNode!=this._originalParent){this._originalParent.appendChild(h);
}},_raise_moveEnd:function(k){var h=this.get_owner();
var j=h._activeModel.getTimeSlotFromDomElement(this._originalParent.parentNode);
var i={appointment:this,newStartTime:j.get_startTime(),editingRecurringSeries:false,targetSlot:j,isAbortedByUser:k||false};
d.raiseCancellableControlEvent(h,"appointmentMoveEnd",i);
},_finishDrag:function(){var h=this.get_owner();
this._resetDragStyles();
var j=h._activeModel.getTimeSlotFromDomElement(this._originalParent.parentNode);
var i=d(this.get_element()).parents("td:first").get(0);
var l=h._activeModel.getTimeSlotFromDomElement(i);
if((j.get_index()==l.get_index())){this._abortDrag();
this._raise_moveEnd();
return;
}var k={OnConfirm:this._onAppointmentMoveCallback,OnCancel:this._onAppointmentMoveAbortCallback,Scheduler:this.get_owner(),Appointment:this,SourceSlot:j,TargetSlot:l,CallbackIsCalledFromDialog:true};
if(h.get_displayRecurrenceActionDialogOnMove()&&(this._recurrenceState==1||this._recurrenceState==2)){this._showRecurrenceActionDialog(k);
}else{k.CallbackIsCalledFromDialog=false;
this._onAppointmentMoveCallback(false,k);
}},_showRecurrenceActionDialog:function(i){var h=this.get_owner();
var j=new b.SchedulerRecurrenceActionDialogShowingEventArgs(i.Appointment,b.RecurrenceAction.Move);
h._raise_recurrenceActionDialogShowing(j);
if(j.get_cancel()){var k=j.get_editSeries();
if(k!==null){i.CallbackIsCalledFromDialog=false;
this._onAppointmentMoveCallback(k,i);
}else{this._onAppointmentMoveAbortCallback(i);
}}else{b.RecurrenceActionDialog.Show(b.RecurrenceAction.Move,i);
}},_onAppointmentMoveCallback:function(i,k){if(k.CallbackIsCalledFromDialog){var l=new b.SchedulerRecurrenceActionDialogClosedEventArgs(k.Appointment,b.RecurrenceAction.Move,i);
k.Scheduler._raise_recurrenceActionDialogClosed(l);
}var h={appointment:k.Appointment,newStartTime:k.TargetSlot.get_startTime(),editingRecurringSeries:i,targetSlot:k.TargetSlot,isAbortedByUser:false};
var j=d.raiseCancellableControlEvent(k.Scheduler,"appointmentMoveEnd",h);
if(!j){k.Scheduler.moveAppointment(k.Appointment,i,k.SourceSlot,k.TargetSlot);
}else{k.Appointment._abortDrag();
}},_onAppointmentMoveAbortCallback:function(h){h.Appointment._abortDrag();
h.Appointment._raise_moveEnd(true);
},get_contextMenuID:function(){return this._contextMenuID;
},set_contextMenuID:function(h){this._contextMenuID=h;
this._contextMenu=null;
},clone:function(){var i=new b.SchedulerAppointment();
i._id=this._id;
i._subject=this._subject;
i._description=this._description;
i._start=this._start;
i._end=this._end;
i._toolTip=this._toolTip;
i._internalID=this._internalID;
i._visible=this._visible;
i._recurrenceState=this._recurrenceState;
i._recurrenceParentID=this._recurrenceParentID;
i._contextMenuID=this._contextMenuID;
i._resources=this.get_resources().clone();
i._attributes=this.get_attributes().clone();
if(this.get_reminders){i._reminders=this.get_reminders().clone();
}for(var h in this){if(i[h]===f&&!h.startsWith("_")){i[h]=c(this[h]);
}}return i;
},_getStyleMode:function(){var h=this.get_owner();
if(!h){return b.AppointmentStyleMode.Auto;
}return h.get_appointmentStyleMode();
},_renderBorder:function(){var i=this.get_borderColor();
var k=this.get_borderWidth()||"";
var j=this.get_borderStyle();
var h=this.get_element();
if(!h){return;
}if(this._getStyleMode()==b.AppointmentStyleMode.Default){d(".rsAptMid, .rsAptContent, .rsAptIn",h).css({"border-color":i,"border-style":j,"border-width":k});
}else{d(h).addClass("rsAptSimple").css({"border-top-color":i,"border-top-style":j,"border-top-width":k,"border-bottom-color":i,"border-bottom-style":j,"border-bottom-width":k}).find(".rsAptOut").css({"border-left-color":i,"border-left-style":j,"border-left-width":k,"border-right-color":i,"border-right-style":j,"border-right-width":k});
}}};
function c(h){var i=h,j;
if(h&&typeof h==="object"){i=Object.prototype.toString.call(h)==="[object Array]"?[]:{};
for(j in h){i[j]=c(h[j]);
}}return i;
}b.SchedulerAppointment.registerClass("Telerik.Web.UI.SchedulerAppointment");
})($telerik.$,Telerik.Web.UI);
Type.registerNamespace("Telerik.Web.UI");
Telerik.Web.UI.SchedulerAppointmentCollection=function(a){this._array=new Array();
this._scheduler=a;
};
Telerik.Web.UI.SchedulerAppointmentCollection.prototype={add:function(b){var a=this._array.length;
this.insert(a,b);
},insert:function(a,b){Array.insert(this._array,a,b);
this._notify(function(c){c._onAppointmentInserting(b);
});
},remove:function(b,c){if(typeof(c)=="undefined"){c=true;
}var a=Array.remove(this._array,b);
this._notify(function(d){d._onAppointmentRemove(b,c);
});
return a;
},removeAt:function(a,c){var b=this.getAppointment(a);
if(b){this.remove(b,c);
}},_clear:function(){this._notify(function(a){a._onAppointmentsClear();
});
this._array=new Array();
},get_count:function(){return this._array.length;
},getAppointment:function(a){return this._array[a];
},indexOf:function(a){return Array.indexOf(this._array,a);
},forEach:function(c){for(var b=0,a=this.get_count();
b<a;
b++){c(this.getAppointment(b));
}},getAppointmentsInRange:function(b,a){return this.findAll(function(c){var e=c.get_start();
var d=c.get_end();
return e<a&&d>b;
});
},getAppointmentsStartingInRange:function(b,a){return this.findAll(function(c){var d=c.get_start();
return d>=b&&d<a;
});
},findAll:function(b){var a=new Telerik.Web.UI.SchedulerAppointmentCollection();
this.forEach(function(c){if(b(c)){a.add(c);
}});
return a;
},find:function(b){var a=null;
this.forEach(function(c){if(!a&&b(c)){a=c;
}});
return a;
},findByID:function(a){var b=null;
this.forEach(function(c){if(c.get_id()==a){b=c;
}});
return b;
},findByResource:function(b){var a=new Telerik.Web.UI.SchedulerResource();
if(b){a._type=b.type||b.get_type();
a._key=b.key;
if(b.get_key){a._key=b.get_key();
}}return this.findAll(function(c){var e=c.get_resources().getResourcesByType(a.get_type());
if(typeof a.get_key()==="undefined"){return e.get_count()>0;
}var d=false;
e.forEach(function(f){if(f.get_key()===a.get_key()){d=true;
}});
return d;
});
},_notify:function(a){if(this._scheduler){a(this._scheduler);
}}};
Telerik.Web.UI.SchedulerAppointmentCollection.registerClass("Telerik.Web.UI.SchedulerAppointmentCollection");
Type.registerNamespace("Telerik.Web.UI.Scheduler.Rendering");
(function(){var a=Telerik.Web.UI.Scheduler.Rendering;
a.Block=function(){this._columns=new Array();
this._parts=new Array();
this._start=null;
this._end=null;
};
a.Block.prototype={add:function(b){if(this._columns.length<1){this._createColumn();
}var e=false;
for(var c=0;
c<this._columns.length;
c++){if(this._columns[c].tryAdd(b)){e=true;
break;
}}if(!e){var d=this._createColumn();
d.tryAdd(b);
}Array.add(this._parts,b);
if(!this._start||this._start>b.start){this._start=b.start;
}if(!this._end||this._end<b.end){this._end=b.end;
}},remove:function(b){var c=Array.remove(this._parts,b);
if(!c){return;
}var d=b.column;
d.remove(b);
if(d.get_parts().length==0){Array.remove(this._columns,d);
}},overlapsWith:function(b){if(this._parts.length==0){return false;
}return this._start<=b.end&&this._end>b.start;
},_createColumn:function(){var c=new a.Column(this);
var b=this._columns.length;
Array.insert(this._columns,b,c);
return c;
},get_columns:function(){return this._columns;
},forEach:function(d){for(var c=0,b=this._parts.length;
c<b;
c++){d(this._parts[c]);
}}};
a.Block.registerClass("Telerik.Web.UI.Scheduler.Rendering.Block");
})();
Type.registerNamespace("Telerik.Web.UI");
Type.registerNamespace("Telerik.Web.UI.Scheduler");
(function(){var a=Telerik.Web.UI;
var b=a.Scheduler;
a.AppointmentEventArgs=function(c){a.AppointmentEventArgs.initializeBase(this);
this._appointment=c;
};
a.AppointmentEventArgs.prototype={get_appointment:function(){return this._appointment;
}};
a.AppointmentEventArgs.registerClass("Telerik.Web.UI.AppointmentEventArgs",Sys.EventArgs);
a.SchedulerAppointmentCancelEventArgs=function(c){a.SchedulerAppointmentCancelEventArgs.initializeBase(this);
this._appointment=c;
};
a.SchedulerAppointmentCancelEventArgs.prototype={get_appointment:function(){return this._appointment;
}};
a.SchedulerAppointmentCancelEventArgs.registerClass("Telerik.Web.UI.SchedulerAppointmentCancelEventArgs",Sys.CancelEventArgs);
a.SchedulerAppointmentClickEventArgs=function(c,d){a.SchedulerAppointmentClickEventArgs.initializeBase(this,[c]);
this._domEvent=d;
};
a.SchedulerAppointmentClickEventArgs.prototype={get_domEvent:function(){return this._domEvent;
}};
a.SchedulerAppointmentClickEventArgs.registerClass("Telerik.Web.UI.SchedulerAppointmentClickEventArgs",a.AppointmentEventArgs);
a.SchedulerAppointmentInsertingEventArgs=function(c,d,e){a.SchedulerAppointmentInsertingEventArgs.initializeBase(this);
this._startTime=c;
this._isAllDay=d;
this._targetSlot=e;
};
a.SchedulerAppointmentInsertingEventArgs.prototype={get_startTime:function(){return this._startTime;
},get_isAllDay:function(){return this._isAllDay;
},get_targetSlot:function(){return this._targetSlot;
}};
a.SchedulerAppointmentInsertingEventArgs.registerClass("Telerik.Web.UI.SchedulerAppointmentInsertingEventArgs",Sys.CancelEventArgs);
a.SchedulerAppointmentResizeStartEventArgs=function(c){a.SchedulerAppointmentResizeStartEventArgs.initializeBase(this,[c]);
};
a.SchedulerAppointmentResizeStartEventArgs.registerClass("Telerik.Web.UI.SchedulerAppointmentResizeStartEventArgs",a.SchedulerAppointmentCancelEventArgs);
a.SchedulerAppointmentResizeEndEventArgs=function(c,f,d,e){a.SchedulerAppointmentResizeEndEventArgs.initializeBase(this,[c]);
this._targetSlot=f;
this._newEndTime=d;
this._editingRecurringSeries=e;
};
a.SchedulerAppointmentResizeEndEventArgs.prototype={get_newTime:function(){return this._newEndTime;
},get_newEndTime:function(){return this._newEndTime;
},get_editingRecurringSeries:function(){return this._editingRecurringSeries;
},get_targetSlot:function(){return this._targetSlot;
}};
a.SchedulerAppointmentResizeEndEventArgs.registerClass("Telerik.Web.UI.SchedulerAppointmentResizeEndEventArgs",a.SchedulerAppointmentCancelEventArgs);
a.SchedulerAppointmentResizingEventArgs=function(c,d){a.SchedulerAppointmentResizingEventArgs.initializeBase(this,[c]);
this._targetSlot=d;
};
a.SchedulerAppointmentResizingEventArgs.prototype={get_targetSlot:function(){return this._targetSlot;
}};
a.SchedulerAppointmentResizingEventArgs.registerClass("Telerik.Web.UI.SchedulerAppointmentResizingEventArgs",a.SchedulerAppointmentCancelEventArgs);
a.SchedulerAppointmentDeletingEventArgs=function(d,c){a.SchedulerAppointmentDeletingEventArgs.initializeBase(this,[d]);
this._editingRecurringSeries=c;
};
a.SchedulerAppointmentDeletingEventArgs.prototype={get_editingRecurringSeries:function(){return this._editingRecurringSeries;
}};
a.SchedulerAppointmentDeletingEventArgs.registerClass("Telerik.Web.UI.SchedulerAppointmentDeletingEventArgs",a.SchedulerAppointmentCancelEventArgs);
a.SchedulerAppointmentDeletedEventArgs=function(c){a.SchedulerAppointmentDeletedEventArgs.initializeBase(this,[c]);
};
a.SchedulerAppointmentDeletedEventArgs.registerClass("Telerik.Web.UI.SchedulerAppointmentDeletedEventArgs",a.AppointmentEventArgs);
a.SchedulerAppointmentEditingEventArgs=function(d,c){a.SchedulerAppointmentEditingEventArgs.initializeBase(this,[d]);
this._editingRecurringSeries=c;
};
a.SchedulerAppointmentEditingEventArgs.prototype={get_editingRecurringSeries:function(){return this._editingRecurringSeries;
}};
a.SchedulerAppointmentEditingEventArgs.registerClass("Telerik.Web.UI.SchedulerAppointmentEditingEventArgs",a.SchedulerAppointmentCancelEventArgs);
a.SchedulerAppointmentMoveStartEventArgs=function(c){a.SchedulerAppointmentMoveStartEventArgs.initializeBase(this,[c]);
};
a.SchedulerAppointmentMoveStartEventArgs.registerClass("Telerik.Web.UI.SchedulerAppointmentMoveStartEventArgs",a.SchedulerAppointmentCancelEventArgs);
a.SchedulerAppointmentMovingEventArgs=function(c,d){a.SchedulerAppointmentMovingEventArgs.initializeBase(this,[c]);
this._targetSlot=d;
};
a.SchedulerAppointmentMovingEventArgs.prototype={get_targetSlot:function(){return this._targetSlot;
}};
a.SchedulerAppointmentMovingEventArgs.registerClass("Telerik.Web.UI.SchedulerAppointmentMovingEventArgs",a.SchedulerAppointmentCancelEventArgs);
a.SchedulerTimeSlotClickEventArgs=function(c,e,d){a.SchedulerTimeSlotClickEventArgs.initializeBase(this);
this._time=c;
this._targetSlot=e;
this._domEvent=d;
};
a.SchedulerTimeSlotClickEventArgs.prototype={get_time:function(){return this._time;
},get_domEvent:function(){return this._domEvent;
},get_targetSlot:function(){return this._targetSlot;
}};
a.SchedulerTimeSlotClickEventArgs.registerClass("Telerik.Web.UI.SchedulerTimeSlotClickEventArgs",Sys.EventArgs);
a.SchedulerAppointmentDoubleClickEventArgs=function(c){a.SchedulerAppointmentDoubleClickEventArgs.initializeBase(this,[c]);
};
a.SchedulerAppointmentDoubleClickEventArgs.registerClass("Telerik.Web.UI.SchedulerAppointmentDoubleClickEventArgs",a.AppointmentEventArgs);
a.SchedulerRecurrenceActionDialogShowingEventArgs=function(c,d){a.SchedulerRecurrenceActionDialogShowingEventArgs.initializeBase(this,[c]);
this._recurrenceAction=d;
this._editSeries=null;
};
a.SchedulerRecurrenceActionDialogShowingEventArgs.prototype={get_recurrenceAction:function(){return this._recurrenceAction;
},get_editSeries:function(){return this._editSeries;
},set_editSeries:function(c){this._editSeries=c;
}};
a.SchedulerRecurrenceActionDialogShowingEventArgs.registerClass("Telerik.Web.UI.SchedulerRecurrenceActionDialogShowingEventArgs",a.SchedulerAppointmentCancelEventArgs);
a.SchedulerRecurrenceActionDialogClosedEventArgs=function(c,e,d){a.SchedulerRecurrenceActionDialogClosedEventArgs.initializeBase(this,[c]);
this._recurrenceAction=e;
this._editSeries=d;
};
a.SchedulerRecurrenceActionDialogClosedEventArgs.prototype={get_recurrenceAction:function(){return this._recurrenceAction;
},get_editSeries:function(){return this._editSeries;
}};
a.SchedulerRecurrenceActionDialogClosedEventArgs.registerClass("Telerik.Web.UI.SchedulerRecurrenceActionDialogClosedEventArgs",a.AppointmentEventArgs);
a.SchedulerFormCreatedEventArgs=function(c,d,e,f){a.SchedulerFormCreatedEventArgs.initializeBase(this,[c]);
this._formElement=d;
this._mode=e;
this._editingRecurringSeries=f||false;
};
a.SchedulerFormCreatedEventArgs.prototype={get_formElement:function(){return this._formElement;
},get_mode:function(){return this._mode;
},get_editingRecurringSeries:function(){return this._editingRecurringSeries;
}};
a.SchedulerFormCreatedEventArgs.registerClass("Telerik.Web.UI.SchedulerFormCreatedEventArgs",a.AppointmentEventArgs);
a.SchedulerAppointmentContextMenuEventArgs=function(c,d){a.SchedulerAppointmentContextMenuEventArgs.initializeBase(this,[c]);
this._domEvent=d;
};
a.SchedulerAppointmentContextMenuEventArgs.prototype={get_domEvent:function(){return this._domEvent;
}};
a.SchedulerAppointmentContextMenuEventArgs.registerClass("Telerik.Web.UI.SchedulerAppointmentContextMenuEventArgs",a.AppointmentEventArgs);
a.SchedulerTimeSlotContextMenuEventArgs=function(c,e,d,f){a.SchedulerTimeSlotContextMenuEventArgs.initializeBase(this);
this._time=c;
this._isAllDay=e;
this._domEvent=d;
this._targetSlot=f;
};
a.SchedulerTimeSlotContextMenuEventArgs.prototype={get_time:function(){return this._time;
},get_isAllDay:function(){return this._isAllDay;
},get_domEvent:function(){return this._domEvent;
},get_targetSlot:function(){return this._targetSlot;
}};
a.SchedulerTimeSlotContextMenuEventArgs.registerClass("Telerik.Web.UI.SchedulerTimeSlotContextMenuEventArgs",Sys.EventArgs);
a.SchedulerWebServiceEventArgs=function(c){a.SchedulerWebServiceEventArgs.initializeBase(this);
this._schedulerInfo=c;
};
a.SchedulerWebServiceEventArgs.prototype={get_schedulerInfo:function(){return this._schedulerInfo;
}};
a.SchedulerWebServiceEventArgs.registerClass("Telerik.Web.UI.SchedulerWebServiceEventArgs",Sys.CancelEventArgs);
a.SchedulerRequestFailedEventArgs=function(c){a.SchedulerRequestFailedEventArgs.initializeBase(this);
this._errorMessage=c;
};
a.SchedulerRequestFailedEventArgs.prototype={get_errorMessage:function(){return this._errorMessage;
}};
a.SchedulerRequestFailedEventArgs.registerClass("Telerik.Web.UI.SchedulerRequestFailedEventArgs",Sys.CancelEventArgs);
b.RequestSuccessEventArgs=function(c){b.RequestSuccessEventArgs.initializeBase(this);
this._result=c;
};
b.RequestSuccessEventArgs.prototype={get_result:function(){return this._result;
}};
b.RequestSuccessEventArgs.registerClass("Telerik.Web.UI.Scheduler.RequestSuccessEventArgs",Sys.EventArgs);
b.NavigationCommandEventArgs=function(d,c){b.NavigationCommandEventArgs.initializeBase(this);
this._command=d;
this._selectedDate=c;
};
b.NavigationCommandEventArgs.prototype={get_command:function(){return this._command;
},get_selectedDate:function(){return this._selectedDate;
}};
b.NavigationCommandEventArgs.registerClass("Telerik.Web.UI.Scheduler.NavigationCommandEventArgs",Sys.CancelEventArgs);
b.NavigationCompleteEventArgs=function(c){b.NavigationCompleteEventArgs.initializeBase(this);
this._command=c;
};
b.NavigationCompleteEventArgs.prototype={get_command:function(){return this._command;
}};
b.NavigationCompleteEventArgs.registerClass("Telerik.Web.UI.Scheduler.NavigationCompleteEventArgs",Sys.EventArgs);
b.AppointmentDataBoundEventArgs=function(d,c){b.AppointmentDataBoundEventArgs.initializeBase(this,[d]);
this._data=c;
};
b.AppointmentDataBoundEventArgs.prototype={get_data:function(){return this._data;
}};
b.AppointmentDataBoundEventArgs.registerClass("Telerik.Web.UI.Scheduler.AppointmentDataBoundEventArgs",a.AppointmentEventArgs);
})();
Type.registerNamespace("Telerik.Web.UI.Scheduler.Rendering");
(function(){var b=$telerik.$;
var a=Telerik.Web.UI.Scheduler.Rendering;
a.Column=function(c){this._parts=[];
this._block=c;
};
a.Column.prototype={tryAdd:function(d){var c=this._getPartsInRange(d.start,d.end);
if(c.length==0){Array.add(this._parts,d);
d.column=this;
return true;
}return false;
},remove:function(d){var c=Array.remove(this._parts,d);
if(c){d.column=null;
}},get_parts:function(){return this._parts;
},get_block:function(){return this._block;
},isLastColumn:function(){var c=this.get_block().get_columns()[this.get_block().get_columns().length-1];
return c==this;
},get_width:function(){if(this.isLastColumn()){return Math.floor(90/this.get_block().get_columns().length)+90%this.get_block().get_columns().length;
}return Math.floor(90/this.get_block().get_columns().length);
},get_left:function(){var c=Array.indexOf(this.get_block().get_columns(),this);
return Math.floor(90/this.get_block().get_columns().length*c);
},_getPartsInRange:function(d,c){return b.grep(this._parts,function(e){return(e.start<c&&e.end>d);
});
}};
a.Column.registerClass("Telerik.Web.UI.Scheduler.Rendering.Column");
})();
Type.registerNamespace("Telerik.Web.UI.Scheduler");
(function(){var c=Telerik.Web.UI.Scheduler;
var a=60000;
var b=a*60;
var d=b*24;
c.DateHelper={getStartOfWeek:function(f,e){var h=f.getDay();
var g=0;
while(h!=e){if(h==0){h=6;
}else{h--;
}g++;
}return new c.DateTime(f).add(-g*d).toDate();
},getEndOfWeek:function(f,e,h){var g=c.DateHelper.getStartOfWeek(f,e);
return new c.DateTime(g).add(h*d).toDate();
},getWeekLength:function(i,g,e){var f=c.DateHelper.getStartOfWeek(i,g);
var h=new Date(f.getTime());
while(h.getDay()!=e){h=new c.DateTime(h).add(d).toDate();
}return((new c.DateTime(h).subtract(f)/d)+1);
},getDaysInMonth:function(f,e){return 32-new Date(f,e,32).getDate();
},getFirstDayOfMonth:function(e){var f=new Date(0);
f.setHours(0);
f.setMinutes(0);
f.setFullYear(e.getFullYear(),e.getMonth(),1);
return f;
},getLastDayOfMonth:function(h){var e=new Date(0);
e.setHours(0);
e.setMinutes(0);
var f=h.getFullYear();
var g=h.getMonth();
e.setFullYear(f,g,this.getDaysInMonth(f,g));
return e;
}};
})();
Type.registerNamespace("Telerik.Web.UI.Scheduler");
Telerik.Web.UI.Scheduler.EventMap=function(){this._owner=null;
this._element=null;
this._eventMap={};
this._onDomEventDelegate=null;
this._browserHandlers={};
};
Telerik.Web.UI.Scheduler.EventMap.prototype={initialize:function(b,a){this._owner=b;
if(!a){a=this._owner.get_element();
}this._element=a;
},skipElement:function(f,c){var a=$telerik.getTouchTarget(f);
var b=a.tagName.toLowerCase();
var d=a.className;
if(b=="select"){return true;
}if(b=="option"){return true;
}if(b=="a"&&(!c||d.indexOf(c)<0)){return true;
}if(b=="input"){return true;
}if(b=="textarea"){return true;
}if(b=="button"){return true;
}return false;
},dispose:function(){if(this._onDomEventDelegate){for(var b in this._eventMap){if(this._shouldUseEventCapture(b)){var c=this._browserHandlers[b];
this._element.removeEventListener(b,c,true);
}else{$telerik.removeHandler(this._element,b,this._onDomEventDelegate);
}}this._onDomEventDelegate=null;
var a=true;
if(this._element._events){for(var d in this._element._events){if(this._element._events[d].length>0){a=false;
break;
}}if(a){this._element._events=null;
}}}},addHandlerForClassName:function(f,g,d){if(typeof(this._eventMap[f])=="undefined"){this._eventMap[f]={};
if(this._shouldUseEventCapture(f)){var e=this._getDomEventDelegate();
var a=this._element;
var b=function(h){return e.call(a,new Sys.UI.DomEvent(h));
};
this._browserHandlers[f]=b;
a.addEventListener(f,b,true);
}else{$telerik.addHandler(this._element,f,this._getDomEventDelegate());
}}var c=this._eventMap[f];
c[g]=d;
},_onDomEvent:function(g){var f=this._eventMap[g.type];
if(!f){return;
}var d=$telerik.getTouchTarget(g);
while(d&&d.nodeType!==9&&d.nodeType!==11){var h=d.className;
var b=h.split(" ");
var c=null;
for(var a=0;
a<b.length;
a++){c=f[b[a]];
if(c){break;
}}if(c){this._fillEventFields(g,d);
if(c.call(this._owner,g)!=true){if(!d.parentNode){g.stopPropagation();
}return;
}}if(d==this._element){return;
}d=d.parentNode;
}},_fillEventFields:function(d,b){d.eventMapTarget=b;
if(d.rawEvent.relatedTarget){d.eventMapRelatedTarget=d.rawEvent.relatedTarget;
}else{if(d.type=="mouseover"){d.eventMapRelatedTarget=d.rawEvent.fromElement;
}else{d.eventMapRelatedTarget=d.rawEvent.toElement;
}}if(!d.eventMapRelatedTarget){return;
}try{var c=d.eventMapRelatedTarget.className;
}catch(a){d.eventMapRelatedTarget=this._element;
}},_shouldUseEventCapture:function(a){return(a=="blur"||a=="focus")&&$telerik.isFirefox&&Sys.Browser.version>=3;
},_getDomEventDelegate:function(){if(!this._onDomEventDelegate){this._onDomEventDelegate=Function.createDelegate(this,this._onDomEvent);
}return this._onDomEventDelegate;
}};
Telerik.Web.UI.Scheduler.EventMap.registerClass("Telerik.Web.UI.Scheduler.EventMap");
Type.registerNamespace("Telerik.Web.UI");
(function(a){Telerik.Web.UI.InlineTemplate=function(d,f,h,e,g){this._schedulerElement=d;
this._schedulerContentElement=$telerik.getElementByClassName(this._schedulerElement,"rsContent","div");
this._localization=f;
this._minWidth=e;
this._minHeight=g;
this._wrapZIndexStep=1000;
var c=f.Save;
var i=f.Cancel;
var b=f.ShowAdvancedForm;
this._formHTMLTemplate='<div class="rsAptEditFormWrapper"> 	<div class="rsAptEditFormOuter"> 		<div class="rsAptEditFormMiddle"> 			<div class="rsAptEditFormMiddle2"> 				<div class="rsAptEditFormInner"> 					<div style="{0}" class="rsAptEditTextareaWrapper"> 						<textarea id="{1}" style="{2}"></textarea> 					</div> 					<div class="rsEditOptions"> 						<a href="#" class="rsAptEditConfirm">'+c+'</a> 						<a href="#" class="rsAptEditCancel">'+i+"</a>";
if(h){this._formHTMLTemplate+='<a href="#" class="rsAptEditMore">'+b+"</a>";
}this._formHTMLTemplate+='</div> 					<div class="rsAptEditResizeHandle"></div> 				</div> 			</div> 		</div> 	</div> </div>';
this._textareaId=this._schedulerElement.id+"_SubjectTextBox";
this._onResizeHandleMouseMoveDelegate=Function.createDelegate(this,this._onResizeHandleMouseMove);
this._onResizeHandleMouseUpDelegate=Function.createDelegate(this,this._onResizeHandleMouseUp);
this._onKeyboardEventDelegate=Function.createDelegate(this,this._onKeyboardEvent);
};
Telerik.Web.UI.InlineTemplate.EmptyFunction=function(){};
Telerik.Web.UI.InlineTemplate._positionForm=function(v){var k=a("#"+v);
var o=k.find("div.rsTopWrap div.rsAptEditSizingWrapper");
if(o.length==0){return;
}if(o[0].detached){return;
}var e=k.find("div.rsTopWrap div.rsContent");
var b=o.parents("table.rsContentTable, table.rsAllDayTable, table.rsTimelineTable");
var w=o.offset();
var m=b.offset();
var t=o.parents().is("table.rsAllDayTable")&&!e.is(".rsTimelineView");
var s=k.find("div.rsTopWrap div.rsContentScrollArea");
var x=s.scrollLeft();
var f=false;
if(!t){var i=w.top+o.height();
var g=m.top+b.height();
if(i>g){o.css("top",(g-i)+"px");
f=true;
}}var h=false;
var q=w.left+o.width();
var d=m.left+b.width();
if(j){d+=x-Telerik.Web.UI.RadScheduler._getScrollBarWidth();
}if(q>d){o.css("left",(d-q)+"px");
h=true;
var j=s[0].scrollHeight!=s[0].offsetHeight;
if(j){o.css("left",(parseInt(o.css("left"))-Telerik.Web.UI.RadScheduler._getScrollBarWidth())+"px");
}}if(t){var l=e.offset();
w=o.offset();
var c=e.prev();
if(c.is(".rsHeader")){l.top-=c.height();
}var r=(w.top-l.top);
var p=o.offset().left-e.offset().left;
o.css({top:r+"px",left:p+"px",width:o.width()+"px"});
o[0].originalLeft=p+x;
o[0].originalParent=o[0].parentNode;
o.appendTo(e);
o[0].detached=true;
}var n=o.find("div.rsAptEditTextareaWrapper");
if(n){var u=n.find("textarea:first");
if(u.length>0){if($telerik.isIE&&n.css("height")!="auto"){u.css("height",n.css("height"));
n.css("height","auto");
}if($telerik.isIE6){u.width(u.width());
}if($telerik.isFirefox){u[0].scrollIntoView=Telerik.Web.UI.InlineTemplate.EmptyFunction;
}}}if(f){e[0].scrollTop=e[0].scrollHeight;
}if(h){e[0].scrollLeft=e[0].scrollWidth;
}o.css("visibility","visible");
};
Telerik.Web.UI.InlineTemplate.prototype={instantiateIn:function(f){this._cleanup();
var c=document.createElement("div");
c.className="rsAptEditSizingWrapper";
c.style.zIndex=20000;
c.style.visibility="visible";
var d=this._getTargetElement(f);
if(d.offsetWidth<this._minWidth){c.style.width=this._minWidth+"px";
}var e="";
var g="";
if(d.offsetHeight<this._minHeight){var b="height: "+this._minHeight+"px";
if($telerik.isIE){g=b;
}else{e=b;
}}c.innerHTML=String.format(this._formHTMLTemplate,e,this._textareaId,g);
d.appendChild(c);
this._element=c;
this._textArea=document.getElementById(this._textareaId);
Telerik.Web.UI.InlineTemplate._positionForm(this._schedulerElement.id);
if(this._textArea){this._textArea.focus();
}this._attachHandlers(true);
},attachTo:function(b){this._element=b;
this._textArea=a(b).find("textarea:first")[0];
var c=a("div.rsTemplateWrapper",this._element);
if(c.length>0){this._template=c[0];
}this._attachHandlers(false);
},get_events:function(){if(!this._events){this._events=new Sys.EventHandlerList();
}return this._events;
},get_text:function(){if(this._textArea){return this._textArea.value;
}},set_text:function(b){if(this._textArea){this._textArea.value=b;
}},get_start:function(){return this._start;
},set_start:function(b){this._start=b;
},get_end:function(){return this._end;
},set_end:function(b){this._end=b;
},get_editSeries:function(){return this._editSeries;
},set_editSeries:function(b){this._editSeries=b;
},get_isInsert:function(){return this._isInsert;
},set_isInsert:function(b){this._isInsert=b;
},get_appointmentInternalID:function(){return this._appointmentInternalID;
},set_appointmentInternalID:function(b){this._appointmentInternalID=b;
},get_element:function(){return this._element;
},dispose:function(){this._events=null;
this._cleanup(true);
},add_saveClicked:function(b){this.get_events().addHandler("saveClicked",b);
},add_moreClicked:function(b){this.get_events().addHandler("moreClicked",b);
},add_keyDown:function(b){this.get_events().addHandler("keyDown",b);
},remove_keyDown:function(b){this.get_events().removeHandler("keyDown",b);
},_getTargetElement:function(c){var e=a(c);
var f=e;
if(!f.is("td")){f=f.parents("td:first");
}var b=f.find(".rsWrap:first");
if(e.is(".rsApt")){b=e.parent();
}if(b.length>0){b.data("originalCssText",b[0].style.cssText);
}else{f.html("");
b=a('<div class="rsWrap"></div>').appendTo(e).css({position:"absolute",top:f[0].offsetTop,left:f[0].offsetLeft,width:f.width(),height:"auto"});
b.data("originalCssText","");
}var d=b.css("zIndex");
if(d=="auto"){d=0;
}b.css({zIndex:parseInt(d)+this._wrapZIndexStep});
return b[0];
},_cleanup:function(b){if(!this._element){return;
}if(this._eventMap){this._eventMap.dispose();
}$telerik.removeHandler(document.documentElement,"keydown",this._onKeyboardEventDelegate);
var c=this._element.originalParent||this._element.parentNode;
c.style.cssText=a(c).data("originalCssText");
if(!b){a(this._element).remove();
this._element=null;
}if(c.childNodes.length==0){var d=c.parentNode;
if(d){d.removeChild(c);
if(d.innerHTML==""){d.innerHTML="&nbsp;";
}}}},_attachHandlers:function(b){if(!this._element){return;
}this._eventMap=new Telerik.Web.UI.Scheduler.EventMap();
this._eventMap.initialize(this);
this._eventMap.addHandlerForClassName("mousedown","rsAptEditResizeHandle",this._onResizeHandleMouseDown);
this._eventMap.addHandlerForClassName("mouseover","rsAptEditFormWrapper",this._onInlineTemplateMouseEvent);
this._eventMap.addHandlerForClassName("click","rsAptEditFormWrapper",this._onInlineTemplateMouseEvent);
this._eventMap.addHandlerForClassName("dblclick","rsAptEditFormWrapper",this._onInlineTemplateMouseEvent);
if(b){this._eventMap.addHandlerForClassName("click","rsAptEditConfirm",this._saveClicked);
this._eventMap.addHandlerForClassName("click","rsAptEditCancel",this._cancelClicked);
this._eventMap.addHandlerForClassName("click","rsAptEditMore",this._moreClicked);
this._eventMap.addHandlerForClassName("click","rsAptEditSizingWrapper",this._clicked);
this._eventMap.addHandlerForClassName("dblclick","rsAptEditSizingWrapper",this._clicked);
this._eventMap.addHandlerForClassName("keydown","rsAptEditSizingWrapper",this._keyDown);
}$telerik.addHandler(document.documentElement,"keydown",this._onKeyboardEventDelegate);
},_onInlineTemplateMouseEvent:function(b){b.stopPropagation();
},_saveClicked:function(b){this._raiseEvent("saveClicked",null);
this.hide();
$telerik.cancelRawEvent(b);
return false;
},_cancelClicked:function(b){this._cleanup();
$telerik.cancelRawEvent(b);
return false;
},_moreClicked:function(b){this._raiseEvent("moreClicked",null);
$telerik.cancelRawEvent(b);
return false;
},_clicked:function(b){$telerik.cancelRawEvent(b);
return false;
},_keyDown:function(b){this._raiseEvent("keyDown",b);
return false;
},_onResizeHandleMouseDown:function(b){this._resizeOrigin={x:b.clientX,y:b.clientY,scrollTop:this._schedulerContentElement.scrollTop};
this._resizing=true;
var c=this._textArea?this._textArea.parentNode.offsetHeight:this._template.offsetHeight;
this._initialSize={width:this._element.offsetWidth,height:c};
$telerik.addHandler(this._schedulerContentElement,"mousemove",this._onResizeHandleMouseMoveDelegate);
$telerik.addHandler(document,"mouseup",this._onResizeHandleMouseUpDelegate);
$telerik.addHandler(document,"selectstart",this._onSelectStart);
},_onResizeHandleMouseMove:function(d){if(!$telerik.isMouseOverElement(this._schedulerElement,d)){return;
}var c=d.clientX-this._resizeOrigin.x;
var b=d.clientY-this._resizeOrigin.y;
c+=this._initialSize.width+this._schedulerContentElement.scrollLeft;
b+=this._initialSize.height+(this._schedulerContentElement.scrollTop-this._resizeOrigin.scrollTop);
c=Math.max(c,this._minWidth);
b=Math.max(b,this._minHeight);
this._setSize(c,b);
Telerik.Web.UI.RadScheduler._clearSelection();
},_onResizeHandleMouseUp:function(){this._cleanupResize();
},_onSelectStart:function(){return false;
},_cleanupResize:function(){if(!this._resizing){return;
}$telerik.removeHandler(this._schedulerContentElement,"mousemove",this._onResizeHandleMouseMoveDelegate);
$telerik.removeHandler(document,"mouseup",this._onResizeHandleMouseUpDelegate);
$telerik.removeHandler(document,"selectstart",this._onSelectStart);
Telerik.Web.UI.RadScheduler._clearSelection();
this._resizing=false;
},_onKeyboardEvent:function(b){if(b.keyCode==27){this._cleanupResize();
}},_setSize:function(b,c){if(!this._element){return;
}this._element.style.width=b+"px";
if(this._textArea){if($telerik.isIE6){this._textArea.style.width="100%";
this._textArea.style.cssText=this._textArea.style.cssText;
this._textArea.style.width=this._textArea.offsetWidth+"px";
}if($telerik.isIE){this._textArea.style.height=(c-6)+"px";
}else{this._textArea.parentNode.style.height=c+"px";
}}else{this._template.style.height=c+"px";
}},hide:function(){this._cleanup();
},_raiseEvent:function(c,d){var b=this.get_events().getHandler(c);
if(b){if(!d){d=Sys.EventArgs.Empty;
}b(this,d);
}}};
})($telerik.$);
Telerik.Web.UI.InlineTemplate.registerClass("Telerik.Web.UI.InlineTemplate",null,Sys.IDisposable);
(function(b){var a='<div class="rsModalWrapper">	<div class="rsOverlay"></div>	<div class="rsModalDialog">		<div class="rsModalBgTopLeft"></div>		<div class="rsModalBgTopRight"></div>		<div class="rsModalBgBottomLeft"></div>		<div class="rsModalBgBottomRight"></div>        <div class="rsModalOuter">    		<div class="rsModalOuterTitle">   		        <a class="rsModalWindowClose" href="#" title=""></a>		        <div class="rsModalInner">			        <h1 class="rsModalTitle"></h1>			        <div class="rsModalContent"></div>			        <div class="rsModalButtons">				        <a href="#" class="rsModalConfirm">OK</a>				        <a href="#" class="rsModalClose">Cancel</a>			        </div>			        <div class="rsModalIcon"></div>		        </div>    		</div>		</div>	</div></div>';
b.bind=function(d,c){return function(f){if(f){f.preventDefault();
}return d[c].apply(d,arguments);
};
};
b.modal=function(c){if(!(this instanceof b.modal)){return new b.modal(c);
}var f=b(c);
var d=f.find(".rsModalWrapper");
var e=380;
if(d.length==0){this._dialog=b(a).appendTo(f).hide().css({height:f.height(),width:f.width(),left:"1px",top:"1px",background:"none"}).find(".rsOverlay").css({height:f.height(),width:f.width(),opacity:0}).end().find(".rsModalDialog").css({width:e,left:(f.width()-e)/2,opacity:0}).end();
}else{this._dialog=d;
}return this;
};
b.modal.prototype={initialize:function(){this._dialog.find(".rsModalClose").unbind("click").bind("click",b.bind(this,"hide")).end().find(".rsModalWindowClose").unbind("click").bind("click",b.bind(this,"hide")).end().find(".rsModalConfirm").unbind("click").bind("click",b.bind(this,"hide"));
return this;
},set_content:function(d){for(var c in d){switch(c){case"title":this._dialog.find(".rsModalTitle").text(d.title);
break;
case"content":this._dialog.find(".rsModalContent").html(d.content);
break;
case"ok":this._dialog.find(".rsModalConfirm").text(d.ok);
break;
case"cancel":this._dialog.find(".rsModalClose").text(d.cancel);
this._dialog.find(".rsModalWindowClose").attr("title",d.cancel);
break;
}}return this;
},set_onActionConfirm:function(c){if(b.isFunction(c)){var d=this._dialog.find(".rsModalConfirm");
d.bind("click",c);
}return this;
},set_onActionCancel:function(c){if(b.isFunction(c)){var d=this._dialog.find(".rsModalClose");
d.bind("click",c);
}return this;
},get_element:function(){return this._dialog;
},show:function(){var d;
if($telerik.isIE7){d=this._dialog.children(".rsModalDialog").children("div[class^=rsModalBg]");
d.addClass("rsAnimating");
}this._dialog.show().find(".rsOverlay").stop().animate({opacity:0.4},"slow").end().find(".rsModalDialog").stop().animate({opacity:1},{duration:"slow",complete:function(){if($telerik.isIE){this.style.cssText=this.style.cssText.replace(/filter.*?\;/ig,"");
}if($telerik.isIE7&&d.hasClass("rsAnimating")){d.removeClass("rsAnimating");
}}}).end();
var c=this._dialog.find(".rsModalDialog");
c.css({top:(this._dialog.parent().height()-c.height())/2});
return this;
},hide:function(){if($telerik.isIE7){this._dialog.children(".rsModalDialog").children("div[class^=rsModalBg]").addClass("rsAnimating");
}this._dialog.find(".rsOverlay").stop().animate({opacity:0},"fast").end().find(".rsModalDialog").stop().animate({opacity:0},"fast",b.bind(this._dialog,"hide")).end();
return this;
},dispose:function(){this._dialog.find(".rsModalConfirm").unbind().end().find(".rsModalClose").unbind();
}};
})($telerik.$);
(function(){var b=$telerik.$;
var a=Telerik.Web.UI;
b.popupDialog=function(c,d,e){if(!(this instanceof b.popupDialog)){return new b.popupDialog(c,d,e);
}this._targetElement=c;
this._handleElement=d;
this._legacyPositioning=this.legacyPositioning();
this.options=b.extend({},b.popupDialog.defaults,e);
this._eventsNamespace="."+c.id;
this._originalCalendarZIndex=Telerik.Web.UI.Calendar.Popup.zIndex;
return this;
};
b.popupDialog.defaults={zIndex:4000,draggable:true,modal:true,minTop:10,minBottom:10,minLeft:10,minRight:10,maxHeight:550,width:700};
b.popupDialog.prototype={show:function(){var d=this._targetElement;
this._modalExtender=new Telerik.Web.UI.ModalExtender(d);
var e=this._legacyPositioning?"absolute":"fixed";
d.style.position=e;
if(this.options.modal){b(this._modalExtender._getModalOverlay()).css({position:e,zIndex:this.options.zIndex});
this._modalExtender.show();
}b(d).css({display:"block",zIndex:this.options.zIndex+1});
Telerik.Web.UI.Calendar.Popup.zIndex=this.options.zIndex+2;
var c=this;
b(window).bind("resize"+this._eventsNamespace,function(){c._resizeForm.apply(c);
c._positionForm.apply(c);
});
b(window).trigger("resize"+this._eventsNamespace);
if(this.options.draggable&&this._handleElement){this._dragCue=this._createDragCue();
this._makeDraggable();
}if($telerik.isIE6||$telerik.quirksMode){setTimeout(function(){d.style.cssText=d.style.cssText;
},0);
}},close:function(){if(this._modalExtender){this._modalExtender.dispose();
}b([window,document,this._handleElement||window]).unbind(this._eventsNamespace);
Telerik.Web.UI.Calendar.Popup.zIndex=this._originalCalendarZIndex;
},legacyPositioning:function(){return $telerik.isIE6||($telerik.isIE&&$telerik.quirksMode);
},_positionForm:function(){var d=b(window),g=b(document),e=this._legacyPositioning?g.scrollTop():0,f=this._legacyPositioning?g.scrollLeft():0,i=e,h=f,c=b(this._targetElement);
f+=(d.width()-c.outerWidth())/2;
e+=(d.height()-parseInt(this.options.maxHeight,10))/2;
f=Math.max(f,h);
e=Math.max(e,i);
c.css({top:e,left:f});
},_resizeForm:function(){var f=this._targetElement,e=this.options,c=b(".rsAdvancedEdit > *:not(.rsAdvOptionsScroll)",f).outerHeight(),d=b(window).height()-e.minTop-e.minBottom-c,g=b(window).width()-e.minLeft-e.minRight;
b(f).css({width:e.width});
b(".rsAdvOptionsScroll",f).css({"max-height":e.maxHeight});
},_createDragCue:function(){var c=b(this._targetElement);
var d=b('<div class="rsAdvDragCue" style="display:none; top:0; left:0;"></div>').css({position:c.css("position"),opacity:"0.5"});
if($telerik.isIE6){d.css({background:"none",opacity:"1"});
}c.parent().append(d);
return d;
},_finishDrag:function(){var d=b(this._targetElement);
var c=this._dragCue;
var e={top:parseInt(c.css("top"),10)+(parseInt(c.css("border-top-width"),10)||parseInt(c.css("border-width"),10)),left:parseInt(c.css("left"),10)+(parseInt(c.css("border-left-width"),10)||parseInt(c.css("border-width"),10))};
d.data("mouseMove",false).css({top:e.top,left:e.left,"-webkit-user-select":"","-moz-user-select":""});
c.hide();
d.trigger("formMoved");
},_onMouseMove:function(m){var h=b(this._targetElement);
var k=this._dragCue;
if(!h.data("mouseMove")){return;
}a.RadScheduler._clearSelection();
var l=k.offset();
if(m.clientX>0){var j=k.data("scrollLeft")-b(window).scrollLeft();
var i=l.left+k.data("relOriginX");
var f=m.clientX-i-j;
var n=parseInt(k.css("left"))+f;
var c=b(window).width()-k.outerWidth(true)-this.options.minRight;
n=Math.max(Math.min(c,n),this.options.minLeft);
k.css("left",n);
}if(m.clientY>0){var e=k.data("scrollTop")-b(window).scrollTop();
var g=l.top+k.data("relOriginY");
var p=m.clientY-g-e;
var d=parseInt(k.css("top"))+p;
var o=b(window).height()-k.outerHeight(true)-this.options.minBottom;
d=Math.max(Math.min(o,d),this.options.minTop);
k.css("top",d);
}},_makeDraggable:function(){var f=b(this._targetElement);
var e=b(this._handleElement);
var d=this._dragCue;
e.bind("mousedown"+this._eventsNamespace,function(j){if(j.which!=1){return;
}if(b(j.target).is("a")){return;
}f.trigger("formMoving");
f.data("mouseMove",true).css({"-webkit-user-select":"none","-moz-user-select":"none"});
var k=parseInt(f.css("left"))-parseInt(d.css("borderLeftWidth"));
var h=parseInt(f.css("top"))-parseInt(d.css("borderTopWidth"));
var i={horizontal:f.outerWidth(true)-f.outerWidth(),vertical:f.outerHeight(true)-f.outerHeight()};
d.css({width:f.width()-i.horizontal,height:f.height()-i.vertical,zIndex:parseInt(f.css("zIndex"))+1,top:h,left:k}).show();
var l=d.offset();
d.data("relOriginY",Math.round(j.clientY-l.top)).data("relOriginX",Math.round(j.clientX-l.left)).data("scrollTop",b(window).scrollTop()).data("scrollLeft",b(window).scrollLeft());
});
var g=this;
b(document).bind("mouseup"+this._eventsNamespace,function(){if(!f.data("mouseMove")){return;
}g._finishDrag.apply(g);
});
var c=function(){g._onMouseMove.apply(g,arguments);
};
b(document).bind("mouseout"+this._eventsNamespace,c);
b(document).bind("mousemove"+this._eventsNamespace,c);
}};
})();
Type.registerNamespace("Telerik.Web.UI");
Type.registerNamespace("Telerik.Web.UI.Scheduler");
$telerik.findScheduler=$find;
$telerik.toScheduler=function(a){return a;
};
(function(){var d=$telerik.$;
var b=Telerik.Web.UI;
var h=b.Scheduler;
var f=h.DateTime;
var a;
var c=60000;
var e=c*60;
var i=e*24;
var g=4;
var j=160;
d.registerEnum(b,"SchedulerViewType",{DayView:0,WeekView:1,MonthView:2,ResourceView:3,TimelineView:4,MultiDayView:5});
d.registerEnum(b,"SchedulerNavigationCommand",{SwitchToDayView:0,SwitchToWeekView:1,SwitchToMonthView:2,SwitchToTimelineView:3,SwitchToMultiDayView:4,NavigateToNextPeriod:5,NavigateToPreviousPeriod:6,SwitchToSelectedDay:7,SwitchFullTime:8,DisplayNextAppointmentSegment:9,DisplayPreviousAppointmentSegment:10,NavigateToSelectedDate:11});
d.registerEnum(b,"SchedulerFormMode",{Hidden:0,Insert:1,Edit:2,AdvancedInsert:3,AdvancedEdit:4});
d.registerEnum(b,"AppointmentStyleMode",{Auto:0,Simple:1,Default:2});
b.RadScheduler=function(k){b.RadScheduler.initializeBase(this,[k]);
this._styles={dragTarget:"rsDragTarget",inlineForm:{sizingWrapper:"rsAptEditSizingWrapper"}};
this._postBackReference=null;
this._uniqueId=null;
this._minutesPerRow=30;
this._numberOfHoveredRows=2;
this._selectedView=0;
this._readOnly=false;
this._overflowBehavior=1;
this._shouldPostbackOnClick=true;
this._displayDeleteConfirmation=true;
this._displayRecurrenceActionDialogOnMove=false;
this._firstDayStart=null;
this._appointments=null;
this._currentAppointment=null;
this._resources=new b.SchedulerResourceCollection();
this._resourceTypes=new b.ResourceTypeCollection();
this._scrollTop=0;
this._scrollLeft=0;
this._useHorizontalScrolling=false;
this._localization=null;
this._advancedTemplate=null;
this._advancedInsertTemplate=null;
this._advancedEditTemplate=null;
this._attributes=new b.SchedulerAttributeCollection();
this._datePickerCalendarExpanded=false;
this._customAttributeNames=[];
this._timeLabelRowSpan=2;
this._appointmentStyleMode=b.AppointmentStyleMode.Auto;
this._enableDescriptionField=false;
this._allowEdit=true;
this._allowDelete=true;
this._allowInsert=true;
this._defaultAdvancedFormRendered=false;
this._useDefaultAdvancedInsert=true;
this._useDefaultAdvancedEdit=true;
this._startEditingInAdvancedForm=true;
this._startInsertingInAdvancedForm=false;
this._dragging=false;
this._draggingAppointment=null;
this._onKeyboardEventDelegate=null;
this._activeModel=null;
this._modelTables=null;
this._resizingState={};
this._eventMap=new b.Scheduler.EventMap();
this._rowHeight="25px";
this._minimumTimelineViewHeight=j;
this._minimumInlineFormHeight=50;
this._minimumInlineFormWidth=250;
this._shouldUseClientInlineInsertForm=true;
this._shouldUseClientInlineEditForm=true;
this._validationGroup=null;
this._webServiceSettings=new b.SchedulerWebServiceSettings({});
this._timeZoneOffset=0;
this._formContainerMode=b.SchedulerFormMode.Hidden;
this._editingRecurringSeries=false;
this._showFullTime=false;
this._showAllDayRow=true;
this._firstDayOfWeek=b.DayOfWeek.Sunday;
this._lastDayOfWeek=b.DayOfWeek.Saturday;
this._advancedFormSettings={enabled:true,modal:false,zIndex:2500};
this._weekViewSettings=[];
this._dayViewSettings=[];
this._multiDayViewSettings=[];
this._monthViewSettings=[];
this._timelineViewSettings=[];
this._modelData=null;
this._schedulerRendered=null;
this._contentTouchScroll=null;
this._repainting=false;
this._isDirty=false;
this._shouldPostbackOnReminderSnooze=false;
this._rowSelectionState=new Object();
this._rowSelectionState.isRowSelection=false;
this._rowSelectionState.selectedSlots=[];
this._rowSelectionState.rowSelectionStartSlot=null;
this._rowSelectionState.rowSelectionEndSlot=null;
this._navigator=null;
this._lastSelectedApt=null;
};
b.RadScheduler._plugins=[];
b.RadScheduler._incrementTime=function(o,n,l){if(isNaN(l)){l=0;
}var m=o.getTimezoneOffset();
o.setTime(o.getTime()+(n*3600000)+(l*60000));
var k=o.getTimezoneOffset();
o.setTime(o.getTime()+((k-m)*60000));
};
b.RadScheduler._getScrollBarWidth=function(){if(b.RadScheduler._scrollbarWidth){return b.RadScheduler._scrollbarWidth;
}var n,p=0;
var o=document.createElement("div");
o.style.position="absolute";
o.style.top="-1000px";
o.style.left="-1000px";
o.style.width="100px";
o.style.height="50px";
o.style.overflow="hidden";
var k=document.createElement("div");
k.style.width="100%";
k.style.height="200px";
o.appendChild(k);
document.body.appendChild(o);
var m=k.offsetWidth;
o.style.overflow="auto";
var l=k.offsetWidth;
b.RadScheduler._scrollbarWidth=m-l;
if(b.RadScheduler._scrollbarWidth<=0){k.style.width="300px";
n=o.offsetWidth;
p=o.clientWidth;
b.RadScheduler._scrollbarWidth=n-p;
}if(b.RadScheduler._scrollbarWidth<=0){b.RadScheduler._scrollbarWidth=16;
}document.body.removeChild(document.body.lastChild);
return b.RadScheduler._scrollbarWidth;
};
b.RadScheduler._preInitialize=function(p,o,m,k,l){var n=d("#"+p);
if(n[0]._preInitialized&&!$telerik.isIE){return;
}Telerik.Web.UI.RadScheduler._adjustContentDimensions(n,o,m,k,l);
n[0].style.cssText=n[0].style.cssText;
b.RadScheduler._recalcAppointmentWidth();
n[0]._preInitialized=true;
};
b.RadScheduler._recalcAppointmentWidth=function(k){d(k).find("table.rsAllDayTable div.rsApt").each(function(){var t=this,o=d(t).parents("table.rsAllDayTable").filter(":first");
if(o.length==0){return;
}var s=o[0].style.width,B=s.endsWith("px"),p=t.style.width,z=p.endsWith("px");
if(B&&z){return;
}if(!B){if(z){t.width=t.originalWidth;
p=t.originalWidth;
}else{t.originalWidth=p;
}}var A=t.parentNode.parentNode;
if(!A||!A.tagName||A.tagName.toUpperCase()!="TD"){return;
}var w=A.parentNode,m=parseInt(p,10)/100,u=Math.floor(m);
var q=t.offsetLeft;
var r=A.cellIndex+u-1;
if(r<0||r>w.cells.length-1){return;
}var l=w.cells[r];
var v=l.offsetLeft+l.offsetWidth;
var y=v-A.offsetLeft-q;
if(y<=0){return;
}var x=m%1;
if(x>0||q>0){var n=x*A.offsetWidth+q;
y+=n;
}t.style.width=y+"px";
});
};
b.RadScheduler._scrollVerticalArea=function(k,l){if(k.length){k.parent().scrollTop(l);
}};
b.RadScheduler._adjustContentDimensions=function(m,q,p,t,o){var n=m.find("div.rsTopWrap");
var u={scheduler:m,schedulerTopWrap:n,contentWrapper:n.find("td.rsContentWrapper"),verticalHeaderWrapper:n.find("td.rsVerticalHeaderWrapper")};
var l=b.RadScheduler._getScrollBarWidth();
if(o){n.find("table.rsVerticalHeaderTable").css("margin-bottom",l+"px");
}b.RadScheduler._adjustContentWidth(u);
if(t==1){b.RadScheduler._adjustContentHeight(u,o);
var r=n.find("td.rsHorizontalHeaderWrapper").children().children();
if($telerik.isTouchDevice){r.css("margin-right",0);
}else{r.css("margin-right",l+"px");
}}var k=n.find("div.rsContentScrollArea");
if(k.length){var v=n.find(".rsVerticalHeaderTable");
b.RadScheduler._scrollVerticalArea(v,q);
k.scrollTop(q).scrollLeft(p);
var s=n.find("td.rsHorizontalHeaderWrapper").children().children();
if($telerik.isIE6||$telerik.quirksMode){s.css("margin-left",p+"px");
}else{s.scrollLeft(p);
}}b.InlineTemplate._positionForm(m[0].id);
b.RadScheduler._adjustTimelineViewHeight(m);
};
b.RadScheduler._adjustContentHeight=function(r,p){var n=d(r.schedulerTopWrap).find("div.rsHeader, div.rsFooter, td.rsHorizontalHeaderWrapper");
n=n.filter(":visible");
var o=r.scheduler.height();
d.each(n,function(){o-=d(this).outerHeight();
});
var k=0;
d(r.contentWrapper).find("table.rsContentTable, table.rsAllDayTable").each(function(){if(d(this).parents().is(".rsHorizontal")){k=d(this).outerHeight();
}else{k+=d(this).outerHeight();
}});
var q=p?b.RadScheduler._getScrollBarWidth():0;
k+=q;
var l=1;
if(k>=o){o-=l;
}else{o=k;
}d(r.contentWrapper).add(r.contentWrapper.children(":first")).height(o);
var m=p?o-q:o;
d(r.verticalHeaderWrapper).add(r.verticalHeaderWrapper.children(":first")).height(m);
};
b.RadScheduler._adjustContentWidth=function(k){var n=k.contentWrapper.add(k.schedulerTopWrap.find("td.rsHorizontalHeaderWrapper").children().get()).add(k.contentWrapper.children()[0]);
var l=k.schedulerTopWrap.outerWidth()-k.schedulerTopWrap.width();
if($telerik.isIE){if(k.scheduler.width()-l!=0){k.scheduler.css("overflow-x","hidden");
k.schedulerTopWrap.width(k.scheduler.width()-l);
k.scheduler.css("overflow-x","");
}}else{k.schedulerTopWrap.width(k.scheduler.width()-l);
}n.width("100%");
var m=k.scheduler.width()-k.verticalHeaderWrapper.width();
n.width(m-2);
var o=k.contentWrapper.find(".rsArrowContainer");
if(o.length>0){o.width(k.contentWrapper.find(".rsContentTable").width());
}};
b.RadScheduler._adjustTimelineViewHeight=function(m){var l=d(m),o=l.find(".rsTimelineView .rsAllDayRow"),n=j;
if(o.length>0){var p=0;
o.each(function(){p+=d(this).height();
});
if(p>0&&p<n){var q=Math.ceil((n-p)/o.length),k=l.find(".rsTimelineView .rsVerticalHeaderWrapper .rsMainHeader th");
o.each(function(r){var u=d(this),s=d(k[r]),t=s.outerHeight()-s.height();
u.height(u.height()+q);
s.height(u.height()-t);
});
}}};
b.RadScheduler._clearSelection=function(){if(document.selection&&document.selection.empty){try{document.selection.empty();
}catch(k){}}else{if(window.getSelection&&window.getSelection().removeAllRanges){window.getSelection().removeAllRanges();
}}};
b.RadScheduler.prototype={initialize:function(){var m=this.get_element(),o=d(m);
b.RadScheduler.callBaseMethod(this,"initialize");
this._activeModel=this._getModelFactory(this._selectedView).createModel();
this._activeModel.initialize();
this._eventMap.initialize(this);
this.updateClientState();
this._scrollTopOnInitialize=this.get_scrollTop();
this._updateScrollAreas();
var n=!this._webServiceSettings.get_isEmpty();
if(!n&&o.find(".rsAdvancedEdit").length>0){var l=o.find(".rsAdvancedEdit")[0];
if(b.Scheduling!=a&&b.Scheduling.AdvancedTemplate!=a&&this._defaultAdvancedFormRendered){var k=this._isSchedulerContentRendered();
this._advancedTemplate=new b.Scheduling.AdvancedTemplate(m,l,k);
}this._makeModal(l);
this._initializeAdvancedTemplateCallback=Function.createDelegate(this,this._initializeAdvancedTemplate);
Sys.Application.add_load(this._initializeAdvancedTemplateCallback);
}if(this._isSchedulerContentRendered()){if(!$telerik.isIE){this._eventMap.addHandlerForClassName("mousemove","rsContent",this._onContentScroll);
}this._eventMap.addHandlerForClassName("dblclick","rsAptEdit",this._stopEventPropagation);
this._eventMap.addHandlerForClassName("dblclick","rsApt",this._onAppointmentDoubleClick);
this._eventMap.addHandlerForClassName("dblclick","rsContentTable",this._onCellDoubleClick);
this._eventMap.addHandlerForClassName("dblclick","rsAllDayTable",this._onCellDoubleClick);
this._eventMap.addHandlerForClassName("dblclick","rsTimelineTable",this._onCellDoubleClick);
this._eventMap.addHandlerForClassName("click","rsAptResize",this._onResizeGripMouseClick);
this._eventMap.addHandlerForClassName("click","rsApt",this._onAppointmentClick);
this._eventMap.addHandlerForClassName("click","rsAptDelete",this._onAppointmentDeleteClick);
this._eventMap.addHandlerForClassName("click","rsArrowTop",this._onPreviousDayClick);
this._eventMap.addHandlerForClassName("click","rsArrowBottom",this._onNextDayClick);
this._eventMap.addHandlerForClassName("click","rsArrowLeft",this._onPreviousDayClick);
this._eventMap.addHandlerForClassName("click","rsArrowRight",this._onNextDayClick);
this._eventMap.addHandlerForClassName("click","rsNextDay",this._onNextSchedulerDayClick);
this._eventMap.addHandlerForClassName("click","rsPrevDay",this._onPreviousSchedulerDayClick);
this._eventMap.addHandlerForClassName("click","rsToday",this._onTodayClick);
this._eventMap.addHandlerForClassName("click","rsFullTime",this._onFullTimeLinkClick);
this._eventMap.addHandlerForClassName("click","rsOvertimeArrow",this._onFullTimeLinkClick);
this._eventMap.addHandlerForClassName("click","rsAptEdit",this._onEditFormClick);
this._eventMap.addHandlerForClassName("click","rsShowMore",this._onShowMoreClick);
this._eventMap.addHandlerForClassName("click","rsDateHeader",this._onDateHeaderClick);
this._eventMap.addHandlerForClassName("click","rsHeaderDay",this._onDayViewTabClick);
this._eventMap.addHandlerForClassName("click","rsHeaderWeek",this._onWeekViewTabClick);
this._eventMap.addHandlerForClassName("click","rsHeaderMonth",this._onMonthViewTabClick);
this._eventMap.addHandlerForClassName("click","rsHeaderTimeline",this._onTimelineViewTabClick);
this._eventMap.addHandlerForClassName("click","rsHeaderMultiDay",this._onMultiDayViewTabClick);
this._eventMap.addHandlerForClassName("click","rsContentTable",this._onCellClick);
this._eventMap.addHandlerForClassName("click","rsAllDayTable",this._onCellClick);
this._eventMap.addHandlerForClassName("click","rsDatePickerActivator",this._onDatePickerToggle);
this._eventMap.addHandlerForClassName("mouseover","rsAllDayTable",this._onRowMouseOver);
this._eventMap.addHandlerForClassName("mouseover","rsContentTable",this._onRowMouseOver);
this._eventMap.addHandlerForClassName("mouseover","rsAllDayCell",this._onAllDayCellMouseOver);
this._eventMap.addHandlerForClassName("mouseover","rsApt",this._onAppointmentMouseOver);
this._eventMap.addHandlerForClassName("mouseover","rsAptResize",this._onResizeGripMouseOver);
this._eventMap.addHandlerForClassName("mouseout","rsContent",this._onRowMouseOut);
this._eventMap.addHandlerForClassName("mouseout","rsAllDayCell",this._onRowMouseOut);
this._eventMap.addHandlerForClassName("mouseout","rsApt",this._onAppointmentMouseOut);
this._eventMap.addHandlerForClassName(($telerik.isTouchDevice?"touchstart":"mousedown"),"rsAptDelete",this._onAppointmentDeleteMouseDown);
this._eventMap.addHandlerForClassName(($telerik.isTouchDevice?"touchstart":"mousedown"),"rsApt",this._onAppointmentMouseDown);
this._eventMap.addHandlerForClassName(($telerik.isTouchDevice?"touchstart":"mousedown"),"rsAptResize",this._onResizeGripMouseDown);
this._eventMap.addHandlerForClassName(($telerik.isTouchDevice?"touchstart":"mousedown"),"rsContentTable",this._onCellMouseDown);
this._eventMap.addHandlerForClassName(($telerik.isTouchDevice?"touchstart":"mousedown"),"rsAllDayTable",this._onCellMouseDown);
this._eventMap.addHandlerForClassName(($telerik.isTouchDevice?"touchend":"mouseup"),"rsContent",this._endDrag);
this._eventMap.addHandlerForClassName("contextmenu","rsApt",this._onAppointmentContextMenu);
this._eventMap.addHandlerForClassName("contextmenu","rsContent",this._onCellContextMenu);
this._eventMap.addHandlerForClassName("contextmenu","rsAllDayCell",this._onCellContextMenu);
this._updateContentScrollArea(o);
this._onDocumentMouseOutDelegate=Function.createDelegate(this,this._onDocumentMouseOut);
$telerik.addHandler(document.documentElement,"mouseout",this._onDocumentMouseOutDelegate);
this._onContentScroll();
this._initializeIndicators();
this._applicationLoadedCallback=Function.createDelegate(this,this._applicationLoaded);
Sys.Application.add_load(this._applicationLoadedCallback);
}this._onKeyboardEventDelegate=Function.createDelegate(this,this._onKeyboardEvent);
$telerik.addHandler(document.documentElement,"keydown",this._onKeyboardEventDelegate);
this._onRowSelectionMouseMoveDelegate=Function.createDelegate(this,this._onRowSelectionMouseMove);
this._onRowSelectionMouseUpDelegate=Function.createDelegate(this,this._onRowSelectionMouseUp);
this.add_navigationCommand(this._onNavigationCommand);
this._onResizeGripMouseMoveDelegate=Function.createDelegate(this,this._onResizeGripMouseMove);
this._onResizeGripMouseUpDelegate=Function.createDelegate(this,this._onResizeGripMouseUp);
this._onSelectStartDelegate=Function.createDelegate(this,this._onSelectStart);
this._onDocMouseUpDelegate=Function.createDelegate(this,this._onDocMouseUp);
this._onDocumentMouseMoveDelegate=Function.createDelegate(this,this._onDocumentMouseMove);
this._getInlineTemplate();
this._initializeRenderingManager();
this._initializeKeyboardNavigation();
this._initializePlugins();
this._onWindowResizeDelegate=Function.createDelegate(this,this.repaint);
$telerik.addHandler(window,"resize",this._onWindowResizeDelegate);
},_initializeKeyboardNavigation:function(){var k=d(this.get_element());
if(k.attr("tabIndex")>=0||k.attr("accessKey")!=a){this._navigator=new b.Scheduler.KeyboardNavigation(this);
}},_initializeIndicators:function(){if(!this._modelData){return;
}if(this.get_activeModel()._settings&&this.get_activeModel()._settings.hiddenAptsIndicator===false){return;
}this._modelData=eval("("+this._modelData+")");
this._setIndicatorState(this._modelData.aptIndicators);
},_initializePlugins:function(){var k=this;
d.each(b.RadScheduler._plugins,function(){this.onInitialize.call(k);
});
},_isSchedulerContentRendered:function(){if(this._schedulerRendered===null){this._schedulerRendered=d(this.get_element()).find(".rsTopWrap").length>0;
}return this._schedulerRendered;
},_updateContentScrollArea:function(k){this._clearScrollAreaHandlers();
this._contentScrollArea=k.find("div.rsContentScrollArea")[0];
if(this._contentScrollArea){this._onContentScrollDelegate=Function.createDelegate(this,this._onContentScroll);
$telerik.addHandler(this._contentScrollArea,"scroll",this._onContentScrollDelegate);
if(b.TouchScrollExtender._getNeedsScrollExtender()&&!this._contentTouchScroll){this._contentTouchScroll=new Telerik.Web.UI.TouchScrollExtender(this._contentScrollArea);
this._contentTouchScroll.initialize();
}}},_updateScrollAreas:function(){var k=this.get_element(),l=d(k);
this._updateContentScrollArea(l);
this._horizontalScrollAreas=l.find(".rsTopWrap td.rsHorizontalHeaderWrapper").children().children();
this._verticalScrollAreas=l.find(".rsTopWrap .rsVerticalHeaderTable");
},_applicationLoaded:function(){Sys.Application.remove_load(this._applicationLoadedCallback);
if(!this.get_element()){return;
}this.set_scrollTop(this._scrollTopOnInitialize);
this.repaint();
this.initializeDatePicker();
},initializeDatePicker:function(){var k=$find(this.get_element().id+"_SelectedDateCalendar");
if(!k){return;
}k.add_dateSelecting(Function.createDelegate(this,this._calendarDateChanging));
k.add_calendarViewChanged(Function.createDelegate(this,this._calendarViewChanged));
if(this._renderingManager){k.set_autoPostBack(false);
k.add_dateSelected(Function.createDelegate(this,this._calendarDateChanged));
}else{k.add_calendarViewChanging(function(l){l.set_autoPostBack(false);
});
k.add_calendarViewChanged(function(l){l.set_autoPostBack(true);
});
}},_calendarDateChanging:function(k,n){var l=n.get_renderDay().get_date();
var o=new Date(l[0],l[1]-1,l[2]);
var m=new h.NavigationCommandEventArgs(b.SchedulerNavigationCommand.NavigateToSelectedDate,o);
this.raiseEvent("NavigationCommand",m);
if(m.get_cancel()){n.set_cancel(true);
this._onDatePickerToggle();
}},_calendarDateChanged:function(m){var n=m.get_selectedDates();
if(n.length>0){var l=n[0];
var k=new Date(l[0],l[1]-1,l[2]);
this.set_selectedDate(k);
this._onDatePickerToggle();
this.raiseEvent("NavigationComplete",new h.NavigationCompleteEventArgs(b.SchedulerNavigationCommand.NavigateToSelectedDate));
}},_calendarViewChanged:function(m){var k=d(this.get_element()).find("div.rsDatePickerWrapper div").filter(":first"),l=k.find("table").filter(":first");
k.css({height:l.height()+"px"});
},_initializeAdvancedTemplate:function(){if(this._advancedTemplate){this._advancedTemplate.initialize();
}this._fireFormCreated(this.get_currentAppointment(),this._formContainerMode,this._editingRecurringSeries);
try{if(this._defaultAdvancedFormRendered){d(this.get_element()).find(".rsAdvFormWrap .riTextBox").filter(":first")[0].focus();
}}catch(k){}Sys.Application.remove_load(this._initializeAdvancedTemplateCallback);
},_initializeRenderingManager:function(){if(!this._webServiceSettings.get_isEmpty()){this._renderingManager=new b.Scheduler.Rendering.RenderingManager(this,this._webServiceSettings);
this._renderingManager.add_appointmentsReceived(Function.createDelegate(this,this._onWebServiceAppointmentsReceived));
this._renderingManager.add_appointmentsPopulated(Function.createDelegate(this,this._onWebServiceAppointmentsPopulated));
this._renderingManager.initialize();
}},_onWebServiceAppointmentsPopulated:function(){this._raise_appointmentsPopulated();
if(!this._activeModel._getRenderer){return;
}var k=this._activeModel._getRenderer();
if(k&&k.refreshIndicatorState){k.refreshIndicatorState();
}},_onWebServiceAppointmentsReceived:function(){this.get_appointments()._clear();
if(this._newActiveModel){this._activeModel=this._newActiveModel;
this._newActiveModel=null;
}if(!this._activeModel._getRenderer){return;
}var k=this._activeModel._getRenderer();
if(k){k.refreshView();
this._updateScrollAreas();
}},dispose:function(){if(this._advancedInsertTemplate&&this._advancedInsertTemplate.dispose){this._advancedInsertTemplate.dispose();
}if(this._advancedEditTemplate&&this._advancedEditTemplate.dispose){this._advancedEditTemplate.dispose();
}if(this._onWindowResizeDelegate){$telerik.removeHandler(window,"resize",this._onWindowResizeDelegate);
}if(this._onKeyboardEventDelegate){$telerik.removeHandler(document.documentElement,"keydown",this._onKeyboardEventDelegate);
}if(this._onDocumentMouseOutDelegate){$telerik.removeHandler(document.documentElement,"mouseout",this._onDocumentMouseOutDelegate);
}var k=this.get_contentElement();
if(k){$telerik.clearHandlers(k);
}if(b.TouchScrollExtender._getNeedsScrollExtender()&&this._contentTouchScroll){this._contentTouchScroll.dispose();
}this._dropDownElement=null;
this._clearScrollAreaHandlers();
this._eventMap.dispose();
this._modelTables=null;
this._resizingState=null;
if(this._inlineTemplate){this._inlineTemplate.dispose();
}if(this._popupDialog){this._popupDialog.close();
}this._disposePlugins();
b.RadScheduler.callBaseMethod(this,"dispose");
},_disposePlugins:function(){var k=this;
d.each(b.RadScheduler._plugins,function(){this.onDispose.call(k);
});
},_clearScrollAreaHandlers:function(){if(this._contentScrollArea){$telerik.clearHandlers(this._contentScrollArea);
}},repaint:function(){if(this._repainting){return;
}this._repainting=true;
b.RadScheduler._adjustContentDimensions(d(this.get_element()),this.get_scrollTop(),this.get_scrollLeft(),this.get_overflowBehavior(),this._useHorizontalScrolling);
this._repaintAdvancedTemplate();
this._initializeModelTables();
b.RadScheduler._recalcAppointmentWidth(this.get_element());
this._repainting=false;
},_repaintAdvancedTemplate:function(){if(this.get_overflowBehavior()==1&&!this._advancedFormSettings.modal){if(typeof(b.Scheduling)!="undefined"&&typeof(b.Scheduling.AdvancedTemplate)!="undefined"){b.Scheduling.AdvancedTemplate._adjustHeight($get(this.get_id()));
}}},get_appointments:function(){return this._appointments;
},set_appointments:function(n){this._appointments=new b.SchedulerAppointmentCollection(this);
var m=eval("("+n+")");
for(var l=0;
l<m.length;
l++){var k=new b.SchedulerAppointment(m[l],this);
this._appointments.add(k);
}},get_resources:function(){return this._resources;
},set_resources:function(m){var n=Sys.Serialization.JavaScriptSerializer.deserialize(m);
for(var l=0;
l<n.length;
l++){var k=new b.SchedulerResource(n[l]);
this._resources.add(k);
}},get_resourceTypes:function(){return this._resourceTypes;
},set_resourceTypes:function(n){var k=Sys.Serialization.JavaScriptSerializer.deserialize(n);
for(var l=0;
l<k.length;
l++){var m=new b.ResourceType(k[l]);
this._resourceTypes.add(m);
}},get_resourceStyles:function(){if(!this._resourceStyles){if(b.ResourceStyleMappingCollection){this._resourceStyles=new b.ResourceStyleMappingCollection();
}else{return null;
}}return this._resourceStyles;
},set_resourceStyles:function(k){var o=eval("("+k+")");
var n=this.get_resourceStyles();
for(var l=0;
l<o.length;
l++){var m=new b.ResourceStyleMapping(o[l],this);
n.add(m);
}},get_firstDayStart:function(){return this._firstDayStart;
},set_firstDayStart:function(k){this._firstDayStart=new Date(Date.parse(k));
},get_currentAppointment:function(){return this._currentAppointment;
},set_currentAppointment:function(l){var k=Sys.Serialization.JavaScriptSerializer.deserialize(l);
this._currentAppointment=new b.SchedulerAppointment(k,this);
},get_localization:function(){return this._localization;
},set_localization:function(k){this._localization=Sys.Serialization.JavaScriptSerializer.deserialize(k);
},get_scrollTop:function(){return this._scrollTop;
},set_scrollTop:function(k){this._scrollTop=k;
},get_scrollLeft:function(){return this._scrollLeft;
},set_scrollLeft:function(k){this._scrollLeft=k;
},get_displayDeleteConfirmation:function(){return this._displayDeleteConfirmation;
},set_displayDeleteConfirmation:function(k){this._displayDeleteConfirmation=k;
},get_displayRecurrenceActionDialogOnMove:function(){return this._displayRecurrenceActionDialogOnMove;
},set_displayRecurrenceActionDialogOnMove:function(k){this._displayRecurrenceActionDialogOnMove=k;
},get_shouldPostbackOnClick:function(){return this._shouldPostbackOnClick;
},set_shouldPostbackOnClick:function(k){this._shouldPostbackOnClick=k;
},get_shouldUseClientInlineInsertForm:function(){return this._shouldUseClientInlineInsertForm;
},set_shouldUseClientInlineInsertForm:function(k){this._shouldUseClientInlineInsertForm=k;
},get_shouldUseClientInlineEditForm:function(){return this._shouldUseClientInlineEditForm;
},set_shouldUseClientInlineEditForm:function(k){this._shouldUseClientInlineEditForm=k;
},get_overflowBehavior:function(){return this._overflowBehavior;
},set_overflowBehavior:function(k){this._overflowBehavior=k;
},get_readOnly:function(){return this._readOnly;
},set_readOnly:function(k){this._readOnly=k;
},get_selectedView:function(){return this._selectedView;
},set_selectedView:function(n,o){this._selectedView=n;
if(this._renderingManager){this._newActiveModel=this._getModelFactory(this._selectedView).createModel();
this._newActiveModel.initialize();
if(!o){var k={};
var l=b.SchedulerViewType;
var m=b.SchedulerNavigationCommand;
k[l.DayView]=m.SwitchToDayView;
k[l.WeekView]=m.SwitchToWeekView;
k[l.MonthView]=m.SwitchToMonthView;
k[l.TimelineView]=m.SwitchToTimelineView;
k[l.MultiDayView]=m.SwitchToMultiDayView;
this.raiseEvent("NavigationComplete",new h.NavigationCompleteEventArgs(k[n]));
}}this.raisePropertyChanged("selectedView");
},get_minutesPerRow:function(){return this._minutesPerRow;
},set_minutesPerRow:function(k){this._minutesPerRow=k;
},get_timeLabelRowSpan:function(){return this._timeLabelRowSpan;
},set_timeLabelRowSpan:function(k){this._timeLabelRowSpan=k;
this.raisePropertyChanged("timeLabelRowSpan");
},get_hoursPanelTimeFormat:function(){return this._hoursPanelTimeFormat||"htt";
},set_hoursPanelTimeFormat:function(k){this._hoursPanelTimeFormat=k;
},get_postBackReference:function(){return this._postBackReference;
},set_postBackReference:function(k){this._postBackReference=k;
},get_allowEdit:function(){return this._allowEdit;
},set_allowEdit:function(k){this._allowEdit=k;
},get_allowDelete:function(){return this._allowDelete;
},set_allowDelete:function(k){this._allowDelete=k;
},get_allowInsert:function(){return this._allowInsert;
},set_allowInsert:function(k){this._allowInsert=k;
},get_attributes:function(){return this._attributes;
},set_attributes:function(k){this._attributes._load(k);
},get_customAttributeNames:function(){return this._customAttributeNames;
},set_customAttributeNames:function(k){this._customAttributeNames=k;
},get_activeModel:function(){return this._activeModel;
},set_numberOfHoveredRows:function(k){this._numberOfHoveredRows=k;
},get_numberOfHoveredRows:function(){return this._numberOfHoveredRows;
},set_groupBy:function(k){this._groupBy=k;
},get_groupBy:function(){return this._groupBy;
},get_contentElement:function(){return $telerik.getElementByClassName(this.get_element(),"rsContent","div");
},get_rowHeight:function(){return this._rowHeight;
},set_rowHeight:function(k){this._rowHeight=k;
},get_height:function(){return d(this.get_element()).css("height");
},set_height:function(k){this.get_element().style.height=k;
this.repaint();
},get_minimumInlineFormWidth:function(){return this._minimumInlineFormWidth;
},set_minimumInlineFormWidth:function(k){this._minimumInlineFormWidth=k;
},get_minimumInlineFormHeight:function(){return this._minimumInlineFormHeight;
},set_minimumInlineFormHeight:function(k){this._minimumInlineFormHeight=k;
},get_validationGroup:function(){return this._validationGroup||this.get_id();
},set_validationGroup:function(k){this._validationGroup=k;
},get_webServiceSettings:function(){return this._webServiceSettings;
},set_webServiceSettings:function(l){var k=Sys.Serialization.JavaScriptSerializer.deserialize(l);
this._webServiceSettings=new b.SchedulerWebServiceSettings(k);
},get_selectedDate:function(){return this._selectedDate;
},set_selectedDate:function(l){var k;
if(l instanceof Date){k=l;
}else{k=new Date(l);
}if(k!=null&&k!=NaN&&k!="Invalid Date"){this._selectedDate=k;
this.raisePropertyChanged("selectedDate");
}},get_showFullTime:function(){return this._showFullTime;
},set_showFullTime:function(k){if(this._renderingManager&&k!=this._showFullTime){if(k){this.get_activeModel()._getRenderer().showFullTime();
this._showFullTime=true;
}else{this.get_activeModel()._getRenderer().showBusinessTime();
this._showFullTime=false;
}this._renderingManager.loadAppointments(false);
this.repaint();
}else{this._showFullTime=k;
}},get_showAllDayRow:function(){return this._showAllDayRow;
},set_showAllDayRow:function(k){this._showAllDayRow=k;
},get_firstDayOfWeek:function(){return this._firstDayOfWeek;
},set_firstDayOfWeek:function(k){this._firstDayOfWeek=k;
},get_lastDayOfWeek:function(){return this._lastDayOfWeek;
},set_lastDayOfWeek:function(k){this._lastDayOfWeek=k;
},get_weekViewSettings:function(){return this._weekViewSettings;
},set_weekViewSettings:function(k){this._weekViewSettings=Sys.Serialization.JavaScriptSerializer.deserialize(k);
},get_dayViewSettings:function(){return this._dayViewSettings;
},set_dayViewSettings:function(k){this._dayViewSettings=Sys.Serialization.JavaScriptSerializer.deserialize(k);
},get_monthViewSettings:function(){return this._monthViewSettings;
},set_monthViewSettings:function(k){this._monthViewSettings=Sys.Serialization.JavaScriptSerializer.deserialize(k);
},get_multiDayViewSettings:function(){return this._multiDayViewSettings;
},set_multiDayViewSettings:function(k){this._multiDayViewSettings=Sys.Serialization.JavaScriptSerializer.deserialize(k);
},get_timelineViewSettings:function(){return this._timelineViewSettings;
},set_timelineViewSettings:function(k){this._timelineViewSettings=Sys.Serialization.JavaScriptSerializer.deserialize(k);
},get_advancedFormSettings:function(){return this._advancedFormSettings;
},set_advancedFormSettings:function(l){for(var k in l){this._advancedFormSettings[k]=l[k];
}},get_appointmentStyleMode:function(){return this._appointmentStyleMode;
},set_appointmentStyleMode:function(k){this._appointmentStyleMode=k;
},showInlineInsertForm:function(o,m){var l,q=null;
if(m){q=m.get_index();
l=this.get_durationBetweenTimeSlots(o,m);
}var k=l?this._createAppointmentFromTimeSlotAndDuration(o,l):this._createAppointmentFromTimeSlot(o);
if(this._renderingManager&&this._startInsertingInAdvancedForm){this._showAdvancedInsertForm(k);
return;
}if(this.get_shouldUseClientInlineInsertForm()||this._renderingManager){if(this._datePickerCalendarExpanded){this._onDatePickerToggle();
}var p=this._getInlineTemplate();
p.instantiateIn(o.get_domElement());
p.set_text("");
p.set_start(k.get_start());
p.set_end(k.get_end());
p.set_isInsert(true);
if(this._getNavigator()){this._getNavigator()._getCommandsModule().trigger("onEditFormShown",p);
}this._fireFormCreated(k,b.SchedulerFormMode.Insert);
return;
}var s=o.get_domElement().offsetWidth;
var r=o.get_domElement().offsetHeight;
var n={command:"Insert",appointmentID:-1,targetSlotIndex:o.get_index(),lastSlotIndex:q,slotWidth:s,slotHeight:r};
this.postback(n);
},showInsertFormAt:function(l,k){this.showInlineInsertForm(l,k);
},showAllDayInlineInsertForm:function(o){var k=new Date(o.getFullYear(),o.getMonth(),o.getDate());
var n=new f(k).add(i).toDate();
var m=new b.SchedulerAppointment();
m.set_start(k);
m.set_end(n);
var l=this.get_activeModel().getTimeSlotForAppointment(m);
this.showInlineInsertForm(l);
},showInlineEditForm:function(m,k){var l=m.get_element().parentNode.parentNode;
if(this._renderingManager&&this._startEditingInAdvancedForm){this.showAdvancedEditForm(m,k);
return;
}if(this.get_shouldUseClientInlineEditForm()||this._renderingManager){if(this._datePickerCalendarExpanded){this._onDatePickerToggle();
}var n=this._getInlineTemplate();
n.instantiateIn(m.get_element());
n.set_appointmentInternalID(m._internalID);
n.set_text(m.get_subject());
n.set_start(m.get_start());
n.set_end(m.get_end());
n.set_editSeries(k);
n.set_isInsert(false);
this._fireFormCreated(m,b.SchedulerFormMode.Edit,k);
return;
}var q=l.offsetWidth;
var p=l.offsetHeight;
var o={command:"Edit",appointmentID:m._internalID,editSeries:k,slotWidth:q,slotHeight:p};
this.postback(o);
},showAdvancedInsertForm:function(k){var m=f.add(k,this.get_minutesPerRow()*c);
var l=new b.SchedulerAppointment();
l.set_subject("");
l.set_start(k);
l.set_end(m);
this._showAdvancedInsertForm(l);
},showAllDayAdvancedInsertForm:function(n){var k=new Date(n.getFullYear(),n.getMonth(),n.getDate());
var m=f.add(k,i);
var l=new b.SchedulerAppointment();
l.set_subject("");
l.set_start(k);
l.set_end(m);
this._showAdvancedInsertForm(l);
},showAdvancedEditForm:function(k,l){if(this._renderingManager){this._showAdvancedFormWrapper(d(this.get_element()).find("div.rsAdvancedEditWrapper"));
this._advancedTemplate=this._getAdvancedEditTemplate();
var m=this.prepareToEdit(k,l);
this._fireFormCreated(m,b.SchedulerFormMode.AdvancedEdit,l);
if(this._advancedTemplate){this._advancedTemplate.populate(m,false,l);
}return;
}var n={command:"AdvancedEdit",appointmentID:k._internalID,appointment:this._getSerializableAppointment(k),startDate:k.get_start().format("yyyyMMddHHmm"),endDate:k.get_end().format("yyyyMMddHHmm"),editSeries:l};
this.postback(n);
},hideAdvancedForm:function(){var l=this.get_element(),m=d(l);
if(this._renderingManager){var k=m.find("> div.rsAdvancedEditWrapper, > div.rsAdvancedInsertWrapper");
if(k.parent().is(".rsHiddenAdvancedForm")){return;
}this._advancedTemplate=null;
m.find("div.rsHiddenAdvancedForm").append(k);
m.find("div.rsTopWrap").show();
}else{m.find("> .rsAdvFormWrap").hide();
}if(this._popupDialog){this._popupDialog.close();
}},hideInlineForm:function(){var k=this._getInlineTemplate();
if(k.get_element()){k.hide();
}},editAppointmentWithConfirmation:function(k){this._editAppointmentInline(k);
},editAppointment:function(l,k){this.showInlineEditForm(l,k);
},insertAppointment:function(l){if(this._renderingManager){this.get_appointments().add(l);
return;
}(new Date()).format("yyyyMMddHHmm");
var k={command:"InsertAppointment",appointment:this._getSerializableAppointment(l),startDate:l.get_start().format("yyyyMMddHHmm"),endDate:l.get_end().format("yyyyMMddHHmm")};
this.postback(k);
},prepareToEdit:function(n,l){if(n.get_recurrenceState()!=b.RecurrenceState.NotRecurring){var k=n;
if(n.get_recurrenceParentID()){k=this.get_appointments().findByID(n.get_recurrenceParentID());
}if(l){return k;
}if(n.get_recurrenceState()!=b.RecurrenceState.Exception){var m=n.clone();
m._recurrenceParentID=k.get_id();
m._recurrenceRule="";
m._recurrenceState=b.RecurrenceState.Exception;
m.__newRecurrenceException=true;
return m;
}}return n;
},updateAppointment:function(k,l){if(this._renderingManager){this._renderingManager.updateAppointment(k);
return;
}var m={command:"UpdateAppointment",appointmentID:k._internalID,appointment:this._getSerializableAppointment(k),startDate:k.get_start().format("yyyyMMddHHmm"),endDate:k.get_end().format("yyyyMMddHHmm"),editSeries:l};
this.postback(m);
},deleteAppointmentWithConfirmation:function(k){this._deleteAppointment(k);
},deleteAppointment:function(k,m){if(this._renderingManager){this.get_appointments().remove(k,m);
return;
}var l={command:"Delete",appointmentID:k._internalID,editSeries:m};
this.postback(l);
},moveAppointment:function(t,r,z,x){if(this._renderingManager){var q=this.prepareToEdit(t,r);
var u=this.get_activeModel();
var v=x.get_startTime();
if(u.get_startOfMovedAppointment){v=u.get_startOfMovedAppointment(t,x);
}var k=this.get_activeModel().getDurationOfMovedAppointment(t,z,x);
var y=f.subtract(v,t.get_start());
var l=f.add(q.get_start(),y);
var n=f.add(l,k);
q.set_start(l);
q.set_end(n);
if(z.get_resource){var o=q.get_resources();
var m=z.get_resource();
var p=o.getResourceByTypeAndKey(m.get_type(),m.get_key());
if(p){o.remove(p);
}var w=x.get_resource();
o.add(w);
}this._renderingManager.updateAppointment(q);
return;
}var s={Command:"Move",AppointmentID:t._internalID,EditSeries:r,SourceSlotIndex:z.get_index(),TargetSlotIndex:x.get_index()};
this.postback(s);
},resizeAppointment:function(m,q,k,n){if(this._renderingManager){var p=this.prepareToEdit(m,q);
var l=f.subtract(n.get_endTime(),m.get_start());
p.set_end(f.add(p.get_start(),l));
this._renderingManager.updateAppointment(p);
return;
}var o={Command:"Resize",AppointmentID:m._internalID,EditSeries:q,SourceSlotIndex:k.get_index(),TargetSlotIndex:n.get_index()};
this.postback(o);
},removeRecurrenceExceptions:function(k){if(this._renderingManager){this._renderingManager.removeRecurrenceExceptions(k);
}},getAppointmentDomElement:function(k){while(k&&!Sys.UI.DomElement.containsCssClass(k,"rsApt")){k=k.parentNode;
}return k;
},getAppointmentFromDomElement:function(l){if(!l){return null;
}var n=this.getAppointmentDomElement(l);
var k=this.get_appointments();
for(var m=0;
m<k.get_count();
m++){var p=k.getAppointment(m);
if(!p.get_element()){continue;
}for(var o=0;
o<p._domElements.length;
o++){if(n.id==p._domElements[o].id){return p;
}}}return null;
},displayToUtc:function(k){return f.add(k,-this._timeZoneOffset);
},utcToDisplay:function(k){return f.add(k,this._timeZoneOffset);
},saveClientState:function(){return'{"scrollTop":'+this._scrollTop+',"scrollLeft":'+this._scrollLeft+',"isDirty":'+this._isDirty+"}";
},rebind:function(){if(!this._renderingManager){return;
}this.hideInlineForm();
this.hideAdvancedForm();
this._renderingManager.loadAppointments();
},_createAppointment:function(k,m){var l=new b.SchedulerAppointment();
if(k&&m){l.set_start(k);
l.set_end(m);
}return l;
},_createAppointmentFromTimeSlot:function(m){if(!m){return this._createAppointment();
}var k=m.get_startTime();
var o=m.get_endTime();
var l=this.get_activeModel();
if(l.getDurationOfInsertedAppointment){o=f.add(k,l.getDurationOfInsertedAppointment(m));
}var n=this._createAppointment(k,o);
if(m.get_resource){n.get_resources().add(m.get_resource());
}return n;
},_createAppointmentFromTimeSlotAndDuration:function(l,m){var n=this._createAppointmentFromTimeSlot(l);
if(m){if(m>0){var k=n.get_start();
var o=f.add(k,m);
n.set_end(o);
}}return n;
},_getSerializableAppointment:function(k){return{ID:k._internalID,Subject:this._encodeString(k.get_subject()),Description:this._encodeString(k.get_description()),Resources:this._getSerializableResources(k.get_resources()),RecurrenceState:k.get_recurrenceState(),RecurrenceParentID:k.get_recurrenceParentID()};
},_encodeString:function(k){return encodeURIComponent((k||"").replace(/'/g,"&squote"));
},_getSerializableResources:function(m){var l=[];
for(var n=0;
n<m.get_count();
n++){var k=m.getResource(n);
l[l.length]={Key:k.get_key(),Text:k.get_text(),Type:k.get_type(),Available:k.get_available()};
}return l;
},_onAppointmentInserting:function(k){if(!this._renderingManager){return;
}k._setOwner(this);
if(!this.get_activeModel().isVisible(k)){k._originallyVisible=k._visible;
k._visible=false;
}if(k.get_visible()){this._activeModel._getRenderer().renderAppointment(k);
if(k.get_visible()){this._raise_appointmentCreated(k);
}}this._renderingManager.insertAppointment(k);
},_onAppointmentRemove:function(k,l){if(!this._renderingManager){return;
}this._activeModel._getRenderer().removeAppointment(k);
this._renderingManager.deleteAppointment(k,l);
},_onAppointmentsClear:function(){if(!this._renderingManager){return;
}var m=this.get_appointments();
for(var l=0,k=m.get_count();
l<k;
l++){this._activeModel._getRenderer().removeAppointment(m.getAppointment(l));
}},_getFormElement:function(){var k=d(this.get_element()),l=k.find("div.rsAptEditFormInner");
if(!l.length){l=k.find("div.rsAdvancedEdit").filter(":visible");
}if(l.length){return l[0];
}else{return null;
}},_fireFormCreated:function(n,m,o){var l=this._getFormElement();
if(l){var k=new b.SchedulerFormCreatedEventArgs(n,l,m,o);
this._raise_formCreated(k);
}},_onKeyboardEvent:function(o){if(this._getNavigator()){this._getNavigator().parse(o);
}var l=this._rowSelectionState;
if(o.keyCode==27){if(this._dragging){this._abortDrag(o,true);
}if(this._resizingState.resizing){this._restoreResizingAppointmentSize();
this._cleanupResize();
}if(!l.isRowSelection){this._clearSlotSelection();
}}if(o.keyCode==13){if(l.isRowSelection){this._abortRowSelection();
}if(l.selectedSlots.length>0&&!this.get_readOnly()&&this.get_allowInsert()){if(!this._lastSelectedApt){var m=l.selectedSlots[0];
var p;
var k=this.get_durationOfSelectedArea();
if(!k){this._clearSlotSelection();
return;
}else{p=l.selectedSlots[l.selectedSlots.length-1];
}var n=new b.SchedulerAppointmentInsertingEventArgs(m.get_startTime(),m.get_isAllDay(),m);
this._raise_appointmentInserting(n);
if(!n.get_cancel()){o.preventDefault();
this.showInsertFormAt(m,p);
}return false;
}}}},_onDocumentMouseOut:function(l){if(!this._dragging||this._finishDragExecuting){return;
}var k=l.rawEvent.relatedTarget?l.rawEvent.relatedTarget:l.rawEvent.toElement;
if(!k){this._abortDrag(l,true);
}},_onDatePickerToggle:function(q){var k=this.get_element(),n=d(k),o=n.find("div.rsDatePickerWrapper"),l=o.find("div").filter(":first"),p=l.find("table").filter(":first"),m=n.find("a.rsDatePickerActivator"),r=k.offsetWidth+"px";
l.stop().css({position:"absolute",overflow:"hidden",width:r}).css({width:p.width()+"px"});
o.css("overflow","visible");
if(!this._datePickerCalendarExpanded){this.hideInlineForm();
l.animate({height:p.height()+"px"},300,"easeInQuart");
m.addClass("rsDatePickerActivatorDown");
}else{l.animate({height:"0px"},300,"easeOutQuart",function(){o.css("overflow","hidden");
});
m.removeClass("rsDatePickerActivatorDown");
}this._datePickerCalendarExpanded=!this._datePickerCalendarExpanded;
if(q){q.preventDefault();
}return false;
},_onContentScroll:function(){var k=this._contentScrollArea;
if(!k){return;
}if(this._horizontalScrollAreas.length){if($telerik.isIE6||$telerik.quirksMode){this._horizontalScrollAreas.css("margin-left",-k.scrollLeft+"px");
}else{this._horizontalScrollAreas.scrollLeft(k.scrollLeft);
}}b.RadScheduler._scrollVerticalArea(this._verticalScrollAreas,k.scrollTop);
var l=this._getInlineTemplate().get_element();
if(l&&l.detached){l.style.left=l.originalLeft-k.scrollLeft+"px";
}this._scrollLeft=k.scrollLeft;
this._scrollTop=k.scrollTop;
this.updateClientState();
},_onAppointmentClick:function(o){if(this._dragging){return;
}var k=new Date().getTime();
var n=100;
if($telerik.isIE&&k-this._resizingState.resizeTimestamp<n){return;
}var m=this.getAppointmentFromDomElement(o.eventMapTarget);
var l=new b.SchedulerAppointmentClickEventArgs(m,o);
this._raise_appointmentClick(l);
if((this.get_readOnly()||!this.get_allowEdit())&&this.get_shouldPostbackOnClick()){var p={Command:"Click",AppointmentID:m._internalID,EditSeries:false};
this.postback(p);
}},_onAppointmentContextMenu:function(o){var m=this.getAppointmentFromDomElement(o.eventMapTarget);
if(m.get_contextMenu){var p=m.get_contextMenu();
if(p!=null){var l=p.findItemByValue("CommandEdit");
var k=p.findItemByValue("CommandDelete");
if(l!=null){l.set_enabled(true);
if(this.get_readOnly()||!this.get_allowEdit()){l.set_enabled(false);
}if(m._allowEdit!=null){l.set_enabled(m.get_allowEdit());
}}if(k!=null){k.set_enabled(true);
if(this.get_readOnly()||!this.get_allowDelete()){k.set_enabled(false);
}if(m._allowDelete!=null){k.set_enabled(m.get_allowDelete());
}}}}var n=new b.SchedulerAppointmentContextMenuEventArgs(m,o);
this._raise_appointmentContextMenu(n);
},_onEditFormClick:function(k){k.stopPropagation();
},_getHourCellFromDomElement:function(k){var l=k;
while(l.tagName.toLowerCase()!="th"){l=l.parentNode;
}return l;
},_onAllDayCellMouseOver:function(k){if(this._dragging&&this._draggingAppointment){k.eventMapTarget.lastChild.appendChild(this._draggingAppointment.get_element());
}this._onRowMouseOver(k);
},_onRowMouseOver:function(p){if(this._dragging||this._resizingState.resizing||this._getInlineTemplate()._resizing){return;
}var q=this.get_numberOfHoveredRows();
if(q==0){return;
}this._removeRowHover();
var l=d(p.target);
while(!(l.is("td")&&l.parents("table").filter(":first").is(".rsContentTable, .rsAllDayTable"))){l=l.parent();
if(l.length==0){return;
}}if(l.parents("table").is(".rsAllDayTable")||this.get_selectedView()==b.SchedulerViewType.MonthView){q=1;
}this._currentHoverCell=l[0];
var o=[this._currentHoverCell];
for(var k=1;
k<q;
k++){var n=this._getNextRowCell(o[k-1]);
if(n){o[k]=n;
}else{break;
}}this._hoveredCells=o;
var m=1;
d.each(this._hoveredCells,function(){d(this).addClass("rsAptCreate").addClass("rsAptCreateRow"+m++);
});
return true;
},_onCellMouseDown:function(o){if(this._lastSelectedApt){if($telerik.isTouchDevice){d(this._lastSelectedApt.get_element()).find(".rsAptDelete").css("visibility","");
if(this._contentTouchScroll){this._contentTouchScroll.enable();
}}this._lastSelectedApt.set_selected(false);
this._lastSelectedApt=null;
}if(!this.get_activeModel().get_supportsSlotSelection()){return;
}var m=this._rowSelectionState;
var l;
if(o.which){l=(o.which==3);
}else{if(o.button){l=(o.button==2);
}}if(l&&m.selectedSlots.length>0){return;
}if(this.get_readOnly()){return;
}var k=d(o.target);
while(!(k.is("td")&&(k.parents("table").filter(":first").is(".rsContentTable")||k.parents("table").filter(":first").is(".rsAllDayTable")))){k=k.parent();
if(k.length==0||k.parents("div").filter(":first").is(".rsAptEditSizingWrapper")){return;
}}this._clearSlotSelection();
var n=this._activeModel.getTimeSlotFromDomElement(k[0]);
if(n&&n.set_selected){n.set_selected(true);
m.rowSelectionStartSlot=n;
m.isRowSelection=true;
m.selectedSlots.push(n);
$telerik.addHandler(document,($telerik.isTouchDevice?"touchmove":"mousemove"),this._onRowSelectionMouseMoveDelegate);
$telerik.addHandler(document,($telerik.isTouchDevice?"touchend":"mouseup"),this._onRowSelectionMouseUpDelegate);
$telerik.addHandler(document,"selectstart",this._onSelectStartDelegate);
}},_onRowSelectionMouseMove:function(l){var k=this._rowSelectionState;
if(this.get_readOnly()||this._dragging||this._draggingAppointment||!k.isRowSelection){this._abortRowSelection();
return;
}this._processRowSelection(this._getCellFromCoordinates(l.clientX,l.clientY));
},_processRowSelection:function(k){b.RadScheduler._clearSelection();
if(!k||!k.tagName||k.tagName.toLowerCase()!="td"){return;
}this.get_activeModel()._processRowSelection(k,this._updateRowSelection);
},_updateRowSelection:function(){var l=this._rowSelectionState;
var o=l.rowSelectionStartSlot;
var n=l.rowSelectionEndSlot;
var k=this._activeModel.getTimeSlotsBetween(o,n);
for(var m=0;
m<l.selectedSlots.length;
m++){l.selectedSlots[m].set_selected(false);
}l.selectedSlots=k;
for(var m=0;
m<k.length;
m++){k[m].set_selected(true);
}},_onRowSelectionMouseUp:function(k){this._abortRowSelection();
},_onNavigationCommand:function(m,l){var k=m;
var n=k._rowSelectionState;
if(n.selectedSlots.length>0){k._clearSlotSelection();
}},_abortRowSelection:function(){var k=this._rowSelectionState;
k.isRowSelection=false;
if(k.selectedSlots.length>0){k.rowSelectionStartSlot=k.selectedSlots[0];
k.rowSelectionEndSlot=k.selectedSlots[k.selectedSlots.length-1];
}try{$telerik.removeHandler(document,($telerik.isTouchDevice?"touchmove":"mousemove"),this._onRowSelectionMouseMoveDelegate);
}catch(l){}try{$telerik.removeHandler(document,($telerik.isTouchDevice?"touchend":"mouseup"),this._onRowSelectionMouseUpDelegate);
}catch(l){}try{$telerik.removeHandler(document,"selectstart",this._onSelectStartDelegate);
}catch(l){}},_clearSlotSelection:function(){var k=this._rowSelectionState;
d.each(k.selectedSlots,function(){this.set_selected(false);
});
k.selectedSlots=[];
k.rowSelectionStartSlot=null;
k.rowSelectionEndSlot=null;
},get_selectedSlots:function(){return this._rowSelectionState.selectedSlots;
},get_durationOfSelectedArea:function(){var k=this._rowSelectionState;
if(k.selectedSlots.length<1){return 0;
}var m=k.rowSelectionStartSlot;
var l=k.rowSelectionEndSlot;
return this.get_durationBetweenTimeSlots(m,l);
},get_durationBetweenTimeSlots:function(m,l){var k=null;
m=(!m)?l:m;
l=(!l)?m:l;
if(m&&l){k=f.subtract(l.get_endTime(),m.get_startTime());
if(!k){k=f.add(m.get_endTime(),m.get_startTime());
}else{if(k<=0){k=f.subtract(m.get_endTime(),l.get_startTime());
if(k<=0){k=null;
}}}}return k;
},_getNavigator:function(){return this._navigator;
},_getParentTable:function(k){var l=k.parentNode;
while(l.tagName.toLowerCase()!="table"){l=l.parentNode;
}return l;
},_getNextRowCell:function(o){var m=o.parentNode;
var l=this._getParentTable(o);
var k=l.rows[m.rowIndex+1];
var n=null;
if(k){var q=k.cells.length;
var p=m.cells.length;
if(q==p){n=k.cells[o.cellIndex];
}else{if(q<p){n=k.cells[o.cellIndex-1];
}else{n=k.cells[o.cellIndex+1];
}}}return n;
},_onRowMouseOut:function(k){if(!this._currentHoverCell){return;
}if(!k.eventMapRelatedTarget||$telerik.isDescendant(this._currentHoverCell,k.eventMapRelatedTarget)){return;
}this._removeRowHover();
},_removeRowHover:function(){if(!this._hoveredCells){return;
}this._currentHoverCell=null;
var k=1;
d.each(this._hoveredCells,function(){d(this).removeClass("rsAptCreate").removeClass("rsAptCreateRow"+k++);
});
},_stopEventPropagation:function(k){k.stopPropagation();
},_onAppointmentDeleteMouseDown:function(l){var k=this._rowSelectionState;
this._stopEventPropagation(l);
if(k.selectedSlots.length>0){this._clearSlotSelection();
}},_onResizeGripMouseDown:function(p){if(this.get_readOnly()){return;
}var n=this._rowSelectionState;
if(n.selectedSlots.length>0){this._clearSlotSelection();
}this._resizingState.resizingElement=this.getAppointmentDomElement(p.eventMapTarget);
var k=this.getAppointmentFromDomElement(this._resizingState.resizingElement);
var m=(k._allowEdit!=null)?k.get_allowEdit():this.get_allowEdit();
if(!m){return;
}var o=new b.SchedulerAppointmentResizeStartEventArgs(k);
this._raise_appointmentResizeStart(o);
if(!o.get_cancel()){this._resizingState.resizing=true;
this._resizingState.resizingAppointment=k;
var l=d(this._resizingState.resizingElement);
this._resizingState.originalSize={height:l.height(),width:l.width()};
$telerik.addHandler(document,($telerik.isTouchDevice?"touchmove":"mousemove"),this._onResizeGripMouseMoveDelegate);
$telerik.addHandler(document,($telerik.isTouchDevice?"touchend":"mouseup"),this._onResizeGripMouseUpDelegate);
$telerik.addHandler(document,"selectstart",this._onSelectStartDelegate);
if($telerik.isTouchDevice){if(this._contentTouchScroll){this._contentTouchScroll.disable();
}p.preventDefault();
}}},_restoreResizingAppointmentSize:function(){if(!this._resizingState.originalSize){return;
}var l=this._resizingState.originalSize.height;
var k=this._resizingState.originalSize.width;
if($telerik.isIE6||$telerik.quirksMode){l-=g;
k-=g;
}var m=d(this._resizingState.resizingElement);
if(m.parents().is("table.rsAllDayTable")){m.width(k);
}else{m.height(l);
}m.find(".rsAptMid, .rsAptIn").css({width:""});
m.find(".rsAptOut, .rsAptMid, .rsAptIn, .rsAptContent").css({height:l});
this._resizingState.resizingElement=null;
this._resizingState.originalSize=null;
},_onResizeGripMouseMove:function(s){var m=this._resizingState.resizingElement;
if(!m){return;
}b.RadScheduler._clearSelection();
var k=m.parentNode.parentNode,t=10,n=$telerik.getTouchEventLocation(s,"client"),o=this._getCellFromCoordinates(n.x,n.y-t);
if(!o){return;
}var q=this._activeModel.getTimeSlotFromDomElement(o);
var r=new b.SchedulerAppointmentResizingEventArgs(this._resizingState.resizingAppointment,q);
this._raise_appointmentResizing(r);
if(r.get_cancel()){return;
}var l=k.parentNode.parentNode.parentNode;
var p=o.parentNode.parentNode.parentNode;
if(l!=p){return;
}this._activeModel.updateResizingAppointmentSize(m,o);
this._keepElementInView(this._resizingState.resizingElement,true);
},_onSelectStart:function(k){$telerik.cancelRawEvent(k);
return false;
},_findResizeTargetSlot:function(p){var l=p.parentNode.parentNode;
var n=l.parentNode;
var u;
if(this.get_selectedView()==b.SchedulerViewType.TimelineView){var k=l.offsetWidth;
var q=Math.round(p.offsetWidth/k);
var t=l.cellIndex+q-1;
t=Math.min(t,n.cells.length-1);
u=n.cells[t];
}else{var m=p.parentNode.parentNode.offsetHeight;
var o=Math.ceil(p.offsetHeight/m);
var r=n.rowIndex+o-1;
r=Math.min(r,n.parentNode.rows.length-1);
var s=n.parentNode.rows[r];
u=s.cells[l.cellIndex];
}return this._activeModel.getTimeSlotFromDomElement(u);
},_onResizeGripMouseUp:function(r){if(!this._resizingState.resizingElement){return;
}var p=this._findResizeTargetSlot(this._resizingState.resizingElement);
var o=this.getAppointmentFromDomElement(this._resizingState.resizingElement);
var n=d(o.get_element()).parents("td").filter(":first").get(0);
var k=this._activeModel.getTimeSlotFromDomElement(n);
var q=p.get_endTime();
if(q.getTime()==o.get_end().getTime()){this._cleanupResize();
return;
}var s={OnConfirm:this._onAppointmentResizeCallback,OnCancel:this._onAppointmentResizeAbortCallback,Scheduler:this,Appointment:o,SourceSlot:k,TargetSlot:p,UpdatedEndDate:q,CallbackIsCalledFromDialog:true};
if(o._recurrenceState==1||o._recurrenceState==2){var m=new b.SchedulerRecurrenceActionDialogShowingEventArgs(s.Appointment,b.RecurrenceAction.Resize);
this._raise_recurrenceActionDialogShowing(m);
if(m.get_cancel()){var l=m.get_editSeries();
if(l!==null){s.CallbackIsCalledFromDialog=false;
this._onAppointmentResizeCallback(l,s);
}else{this._onAppointmentResizeAbortCallback(s);
}}else{b.RecurrenceActionDialog.Show(b.RecurrenceAction.Resize,s);
}}else{s.CallbackIsCalledFromDialog=false;
this._onAppointmentResizeCallback(false,s);
}r.stopPropagation();
this._cleanupResize();
},_cleanupResize:function(){this._resizingState.resizing=false;
this._resizingState.resizingAppointment=null;
this._resizingState.resizeTimestamp=new Date().getTime();
$telerik.removeHandler(document,($telerik.isTouchDevice?"touchmove":"mousemove"),this._onResizeGripMouseMoveDelegate);
$telerik.removeHandler(document,($telerik.isTouchDevice?"touchend":"mouseup"),this._onResizeGripMouseUpDelegate);
$telerik.removeHandler(document,"selectstart",this._onSelectStartDelegate);
if(this._contentTouchScroll){this._contentTouchScroll.enable();
}},_onAppointmentResizeCallback:function(k,l){if(l.CallbackIsCalledFromDialog){var m=new b.SchedulerRecurrenceActionDialogClosedEventArgs(l.Appointment,b.RecurrenceAction.Resize,k);
l.Scheduler._raise_recurrenceActionDialogClosed(m);
}var n=new b.SchedulerAppointmentResizeEndEventArgs(l.Appointment,l.TargetSlot,l.UpdatedEndDate,k);
l.Scheduler._raise_appointmentResizeEnd(n);
if(!n.get_cancel()){l.Scheduler.resizeAppointment(l.Appointment,k,l.SourceSlot,l.TargetSlot);
}else{l.Scheduler._restoreResizingAppointmentSize();
}},_onAppointmentResizeAbortCallback:function(k){k.Scheduler._restoreResizingAppointmentSize();
},_onResizeGripMouseClick:function(k){k.stopPropagation();
},_onResizeGripMouseOver:function(k){k.stopPropagation();
},_initializeModelTables:function(){this._modelTables=[];
var l=this;
var k=l.get_element();
d(".rsTopWrap .rsAllDayTable, .rsTopWrap .rsContentTable, .rsTopWrap .rsTimelineTable",this.get_element()).each(function(){var m=this;
m.targetRect=$telerik.getBounds(m);
var n=l._getTotalOffset(k);
m.targetRect.x-=n.left;
m.targetRect.y-=n.top;
l._compensateScrollOffset(m);
m.cellWidth=m.targetRect.width/m.rows[0].cells.length;
var o=[];
d.each(m.rows,function(){Array.add(o,this.cells[0].offsetHeight);
});
m.cellHeights=o;
Array.add(l._modelTables,m);
});
return this._modelTables;
},_compensateScrollOffset:function(l){var k=$telerik.getScrollOffset(l,true);
var m=$telerik.getScrollOffset(document.documentElement,false);
k.x-=m.x;
k.y-=m.y;
l.targetRect.x+=k.x;
l.targetRect.y+=k.y;
if($telerik.isSafari3||$telerik.isChrome){l.targetRect.x+=k.x;
l.targetRect.y+=k.y;
}},_getTotalOffset:function(k){var n=k.offsetTop;
var m=k.offsetLeft;
var l=k.offsetParent;
while(l){n+=l.offsetTop;
m+=l.offsetLeft;
l=l.offsetParent;
}return{top:n,left:m};
},_getCellFromCoordinates:function(z,r){if(!this.get_element()){return;
}var l=this._modelTables;
var u=d("#"+this.get_element().id+" div.rsContentScrollArea").filter(":first")[0];
var w=$telerik.getScrollOffset(u,true);
var n=this._getTotalOffset(this.get_element());
for(var s=0,p=l.length;
s<p;
s++){var k=z+w.x;
var v=r+w.y;
var A=l[s];
var t={x:A.targetRect.x+n.left,y:A.targetRect.y+n.top,width:A.targetRect.width,height:A.targetRect.height};
var q=t.y+t.height;
var B=t.x+t.width;
if(k>=t.x&&k<=B&&v>=t.y&&v<=q){var m=this._getRowIndex(v,A,t.y);
m=Math.min(A.rows.length-1,Math.max(0,m));
var o=parseInt((k-t.x)/A.cellWidth);
o=Math.min(A.rows[m].cells.length-1,Math.max(0,o));
return A.rows[m].cells[o];
}}return null;
},_getRowIndex:function(m,k,q){var o=0;
var p=k.cellHeights.length;
var l=q;
while(o<p){var n=l+k.cellHeights[o];
if(l<=m&&m<n){break;
}l=n;
o++;
}return o;
},_shouldStartDrag:function(k){if(!this._initialDragAppointment||!this._initialDragMousePos){return false;
}if(Math.abs(this._initialDragMousePos.x-k.x)>4||Math.abs(this._initialDragMousePos.y-k.y)>4){return true;
}},_onDocumentMouseMove:function(t){var k=this._getMousePosition(t),m=$telerik.getTouchEventLocation(t,"client"),o=$telerik.getTouchTarget(t);
if(!this._dragging&&this._shouldStartDrag(k)){this._startDrag(t);
}if(!this._dragging||!this._draggingAppointment){return;
}b.RadScheduler._clearSelection();
var r=this._draggingAppointment.get_element();
var n;
if((this.get_selectedView()==b.SchedulerViewType.DayView||this.get_selectedView()==b.SchedulerViewType.WeekView)&&($telerik.isChrome||$telerik.isSafari)&&!$telerik.isTouchDevice){n=this._activeModel.getTimeSlotFromDomElement(o)._domElement;
if(!n){n=this._activeModel.getTimeSlotForAppointment(this.getAppointmentFromDomElement(o))._domElement;
}}else{if($telerik.isChrome||$telerik.isSafari){m.y-=this._draggingOffset;
}n=this._getCellFromCoordinates(m.x,m.y);
}if(!n||!n.tagName||n.tagName.toLowerCase()!="td"||n.firstChild==r.parentNode){return;
}d(r.parentNode).removeClass(this._styles.dragTarget);
var q=d(n).find("div.rsWrap").filter(":first");
if(q.length==0){var u=d(n);
q=d(r.parentNode.cloneNode(false)).css({width:u.width(),height:"auto"});
if(n.innerHTML=="&nbsp;"){n.innerHTML="";
}else{q.css({position:"absolute",top:u[0].offsetTop,left:u[0].offsetLeft});
}q.appendTo(u);
}q.data("oldZIndex",q.css("zIndex")).css("zIndex",999);
this._restoreWrapZIndex(r.parentNode);
if(this._activeModel.updateDraggingAppointmentSize){this._activeModel.updateDraggingAppointmentSize(r,n,this._draggingAppointmentWidth);
}if(this.get_selectedView()!=b.SchedulerViewType.MonthView){var p=n.parentNode.parentNode.rows.length-n.parentNode.rowIndex;
var l=(p*parseInt(this.get_rowHeight()))-g;
l=Math.min(this._draggingAppointmentHeight,l);
d(r).height(l+"px");
q.append(r);
}else{if(n.childNodes.length>1){n.childNodes[1].appendChild(r);
}else{q.append(r);
}}d(r.parentNode).addClass(this._styles.dragTarget).css("display","");
var s=this._activeModel.getTimeSlotFromDomElement(n);
var v=new b.SchedulerAppointmentMovingEventArgs(this._draggingAppointment,s);
this.raiseEvent("appointmentMoving",v);
if(v.get_cancel()){this._abortDrag(t);
}else{this._keepElementInView(r);
}return true;
},_restoreWrapZIndex:function(m){var k=d(m),l=k.data("oldZIndex");
if(l){k.css("zIndex",l);
}},_keepElementInView:function(k,l){this._keepElementInViewHorizontal(k,l);
this._keepElementInViewVertical(k,l);
},_keepElementInViewHorizontal:function(l,q){var k=d("#"+this.get_element().id+" div.rsContentScrollArea")[0];
var r=d("#"+this.get_element().id+" div.rsContent")[0];
var t=this._getRelativeOffset(k,r);
var o=this._getRelativeOffset(l,r);
o.left-=t.left;
o.top-=t.top;
var u=l.parentNode.parentNode.offsetWidth;
var m=o.left;
var n=l.offsetWidth;
var s=m+n;
var v=k.clientWidth+k.scrollLeft;
if(!q&&m<k.scrollLeft){k.scrollLeft=m;
}if(s>v){var p=k.scrollLeft+(s-v);
p=Math.min(p,k.clientWidth+p);
if(!q&&p>m){p=m;
}k.scrollLeft=p;
}if(q&&(s-u)<k.scrollLeft){k.scrollLeft=s-u;
}},_keepElementInViewVertical:function(l,q){var k=d("div.rsContentScrollArea",this.get_element())[0];
var s=d("div.rsContent",this.get_element().id)[0];
var t=this._getRelativeOffset(k,s);
var u=this._getRelativeOffset(l,s);
u.left-=t.left;
u.top-=t.top;
var m=l.parentNode.parentNode.offsetHeight;
var v=u.top;
var n=l.offsetHeight;
var p=v+n;
var o=k.clientHeight+k.scrollTop;
if(q){if(p>o){var r=k.scrollTop+(p-o);
if((k.clientHeight+r)>k.scrollHeight){return;
}k.scrollTop=r;
}if((p-m)<k.scrollTop){k.scrollTop=p-m;
}}else{if(v<k.scrollTop){k.scrollTop=Math.max(k.scrollTop-(m*2),0);
}if(v>o){k.scrollTop=Math.min(k.scrollTop+(m*2),k.scrollHeight);
}}},_getRelativeOffset:function(n,l){var o=n.offsetParent;
var k=n.offsetTop;
var m=n.offsetLeft;
while(o!=l){k+=o.offsetTop;
m+=o.offsetLeft;
if(!o.offsetParent){break;
}o=o.offsetParent;
}return{top:k,left:m};
},_getMousePosition:function(m){var k=$telerik.getScrollOffset(document.body,true),l=$telerik.getTouchEventLocation(m,"client");
return{x:l.x+k.x,y:l.y+k.y};
},_onAppointmentMouseDown:function(n){if(this.get_readOnly()){return;
}var m=this._rowSelectionState;
if(m.selectedSlots.length>0){this._clearSlotSelection();
}var k=this.getAppointmentFromDomElement(n.eventMapTarget);
if(this._lastSelectedApt){if($telerik.isTouchDevice){d(this._lastSelectedApt.get_element()).find(".rsAptDelete").css("visibility","");
}this._lastSelectedApt.set_selected(false);
}this._lastSelectedApt=k;
this._lastSelectedApt.set_selected(true);
if($telerik.isTouchDevice){d(this._lastSelectedApt.get_element()).find(".rsAptDelete").css("visibility","visible");
}var l=(k._allowEdit!=null)?k.get_allowEdit():this.get_allowEdit();
if(!l){return;
}if(this._contentTouchScroll){this._contentTouchScroll.disable();
}this._initialDragMousePos=this._getMousePosition(n);
this._initialDragAppointment=k;
$telerik.addHandler(document,"selectstart",this._onSelectStartDelegate);
$telerik.addHandler(document,($telerik.isTouchDevice?"touchend":"mouseup"),this._onDocMouseUpDelegate);
$telerik.addHandler(document,($telerik.isTouchDevice?"touchmove":"mousemove"),this._onDocumentMouseMoveDelegate);
this._dragHandlersAttached=true;
if($telerik.isTouchDevice){n.preventDefault();
}},_startDrag:function(r){var m=$telerik.getTouchEventLocation(r,"client"),o=this._initialDragAppointment,k=this._getCellFromCoordinates(m.x,m.y);
if(!k){return;
}var q=new b.SchedulerAppointmentMoveStartEventArgs(o);
this.raiseEvent("appointmentMoveStart",q);
if(q.get_cancel()){return;
}this._draggingAppointment=o;
this._draggingAppointmentHeight=d(o.get_element()).height();
this._draggingAppointmentWidth=d(o.get_element()).width();
this._dragging=true;
var l=this._draggingAppointment.get_element();
var p;
if($telerik.isTouchDevice){p=d(l).offset();
p={x:p.left,y:p.top};
}else{p=$telerik.getLocation(l);
}if($telerik.isFirefox||$telerik.isSafari){var n=$telerik.getScrollOffset(l,true);
p.x-=n.x;
p.y-=n.y;
if($telerik.isFirefox){p.x+=document.body.parentNode.scrollLeft;
p.y+=document.body.parentNode.scrollTop;
}else{p.x+=document.body.scrollLeft;
p.y+=document.body.scrollTop;
}}var s=$telerik.getLocation(k);
var t=m.y-p.y;
var u=m.y-s.y;
this._draggingOffset=t-u;
if($telerik.isFirefox&&document.compatMode=="BackCompat"){this._draggingOffset=0;
}if(this.get_selectedView()==b.SchedulerViewType.MonthView||this.get_selectedView()==b.SchedulerViewType.TimelineView){this._draggingOffset=0;
}o._startDrag();
},_endDrag:function(k){this._finishDrag(k,false);
},_onDocMouseUp:function(k){this._finishDrag(k,false);
},_abortDrag:function(k,l){this._finishDrag(k,true,l);
},_finishDrag:function(n,l,o){this._finishDragExecuting=true;
if(this._dragHandlersAttached){$telerik.removeHandler(document,"selectstart",this._onSelectStartDelegate);
$telerik.removeHandler(document,($telerik.isTouchDevice?"touchend":"mouseup"),this._onDocMouseUpDelegate);
$telerik.removeHandler(document,($telerik.isTouchDevice?"touchmove":"mousemove"),this._onDocumentMouseMoveDelegate);
this._dragHandlersAttached=false;
}if(this._dragging){if(this._contentTouchScroll){this._contentTouchScroll.enable();
}var m=this._draggingAppointment.get_element();
if(!l&&m.parentNode&&m.parentNode.parentNode){var k=m.parentNode.parentNode;
this._draggingAppointment._finishDrag(k);
}else{d(m).height(this._draggingAppointmentHeight).width(this._draggingAppointmentWidth);
this._restoreWrapZIndex(m.parentNode);
this._draggingAppointment._abortDrag();
this._draggingAppointment._raiseMoveEnd(o);
}var p=this;
window.setTimeout(function(){p._draggingAppointment=null;
p._dragging=false;
},0);
Sys.UI.DomElement.removeCssClass(m.parentNode,this._styles.dragTarget);
n.preventDefault();
n.stopPropagation();
}this._finishDragExecuting=false;
},_onAppointmentDoubleClick:function(m){if(this._resizingState.resizing){this._resizingState.resizing=false;
m.stopPropagation();
return;
}b.RadScheduler._clearSelection();
var k=this.getAppointmentFromDomElement(m.eventMapTarget);
var l=new b.SchedulerAppointmentDoubleClickEventArgs(k);
this._raise_appointmentDoubleClick(l);
this._editAppointmentInline(k);
$telerik.cancelRawEvent(m);
return false;
},_editAppointmentInline:function(k){if(this.get_readOnly()||!k){return;
}var m=(k._allowEdit!=null)?k.get_allowEdit():this.get_allowEdit();
if(!m){return;
}var l={OnConfirm:this._onAppointmentEditCallback,Scheduler:this,Appointment:k,CallbackIsCalledFromDialog:true};
this._showEditConfirmationDialog(l);
},_showEditConfirmationDialog:function(l){if(l.Appointment._recurrenceState==1||l.Appointment._recurrenceState==2||l.Appointment._recurrenceState==3){var k=new b.SchedulerRecurrenceActionDialogShowingEventArgs(l.Appointment,b.RecurrenceAction.Edit);
this._raise_recurrenceActionDialogShowing(k);
if(k.get_cancel()){var m=k.get_editSeries();
if(m!==null){l.CallbackIsCalledFromDialog=false;
l.OnConfirm(m,l);
}}else{b.RecurrenceActionDialog.Show(b.RecurrenceAction.Edit,l);
}}else{l.CallbackIsCalledFromDialog=false;
l.OnConfirm(false,l);
}},_onAppointmentEditCallback:function(k,l){if(l.CallbackIsCalledFromDialog){var m=new b.SchedulerRecurrenceActionDialogClosedEventArgs(l.Appointment,b.RecurrenceAction.Edit,k);
l.Scheduler._raise_recurrenceActionDialogClosed(m);
}var n=new b.SchedulerAppointmentEditingEventArgs(l.Appointment,k);
l.Scheduler._raise_appointmentEditing(n);
if(!n.get_cancel()){l.Scheduler.editAppointment(l.Appointment,k);
}},_onDateHeaderClick:function(m){$telerik.cancelRawEvent(m);
var n=new Date();
var k=m.eventMapTarget.href.match(/#(\d{4}-\d{2}-\d{2})/);
if(k&&k.length==2){var l=$telerik.$.map(k[1].split("-"),function(o){return parseInt(o,10);
});
n=new Date(l[0],l[1]-1,l[2]);
}return this._switchToSelectedDay(n);
},_onShowMoreClick:function(l){$telerik.cancelRawEvent(l);
var k=this._activeModel.getTimeSlotFromDomElement(l.eventMapTarget);
return this._switchToSelectedDay(k.get_startTime());
},_switchToSelectedDay:function(m){var m=f.getDate(m);
var k=new h.NavigationCommandEventArgs(b.SchedulerNavigationCommand.SwitchToSelectedDay,m);
this.raiseEvent("NavigationCommand",k);
if(k.get_cancel()){return;
}if(this._renderingManager){this._renderingManager._suppressWebServiceCalls=true;
this.set_selectedDate(m);
this._renderingManager._suppressWebServiceCalls=false;
this.set_selectedView(b.SchedulerViewType.DayView,true);
this.raiseEvent("NavigationComplete",new h.NavigationCompleteEventArgs(b.SchedulerNavigationCommand.SwitchToSelectedDay));
return;
}var l={Command:"SwitchToSelectedDay",StartDate:m.format("yyyyMMddHHmm")};
this.postback(l);
return false;
},_onAppointmentMouseOver:function(o){if(this._resizingState.resizing||this._dragging){o.stopPropagation();
return;
}var n=this.getAppointmentDomElement(o.eventMapTarget);
var k=this.getAppointmentFromDomElement(n);
var m=(k._allowDelete!=null)?k.get_allowDelete():this.get_allowDelete();
if(!m){return;
}this._hoveredAppointmentElement=n;
var l=$telerik.getElementByClassName(n,"rsAptDelete","a");
if(l){l.style.visibility="visible";
}},_onAppointmentMouseOut:function(n){var m=n.rawEvent.relatedTarget?n.rawEvent.relatedTarget:n.rawEvent.toElement;
if(!m){return;
}if($telerik.isDescendant(this._hoveredAppointmentElement,m)){return;
}var l=this.getAppointmentDomElement(n.eventMapTarget);
var k=$telerik.getElementByClassName(l,"rsAptDelete","a");
if(k){k.style.visibility="hidden";
}},_onCellClick:function(m){if(m.target.tagName.toUpperCase()=="TBODY"){return;
}var k=this._activeModel.getTimeSlotFromDomElement(m.target);
if(!k){return;
}var l=new b.SchedulerTimeSlotClickEventArgs(k.get_startTime(),k,m);
this._raise_timeSlotClick(l);
},_onCellContextMenu:function(s){var n=this._activeModel.getTimeSlotFromDomElement(s.target);
if(!n){return;
}var q=this._rowSelectionState;
if(q.selectedSlots.length>0){var k=false;
for(var l=0;
l<q.selectedSlots.length;
l++){if(f.areEqual(q.selectedSlots[l].get_startTime(),n.get_startTime())){k=(q.selectedSlots[0].get_rawIndex().modelIndex==n.get_rawIndex().modelIndex);
break;
}}if(!k){this._clearSlotSelection();
q.rowSelectionStartSlot=n;
n.set_selected(true);
var o=((f.areEqual(this._activeModel.get_visibleRangeEnd(),n.get_endTime()))&&(this.get_selectedView()==b.SchedulerViewType.WeekView));
var v=(n.get_isAllDay()||o)?1:this._numberOfHoveredRows;
var u=n;
for(var l=0;
l<v-1;
l++){u=this._activeModel._getNextTimeSlot(u);
if(u){u.set_selected(true);
}}q.rowSelectionEndSlot=(u)?u:n;
this._updateRowSelection();
}}var r=new b.SchedulerTimeSlotContextMenuEventArgs(n.get_startTime(),n.get_isAllDay(),s,n);
this._raise_timeSlotContextMenu(r);
if(this.get_readOnly()||!this.get_allowInsert()){if(this.get_timeSlotContextMenus){var t=this.get_timeSlotContextMenus()[0];
if(t!=null){var m=t.findItemByValue("CommandAddAppointment");
var p=t.findItemByValue("CommandAddRecurringAppointment");
if(m!=null){m.set_enabled(false);
}if(p!=null){p.set_enabled(false);
}}}}},_onCellDoubleClick:function(m){if(!this.get_readOnly()&&this.get_allowInsert()){var k=this._activeModel.getTimeSlotFromDomElement(m.target);
var l=new b.SchedulerAppointmentInsertingEventArgs(k.get_startTime(),k.get_isAllDay(),k);
this._raise_appointmentInserting(l);
if(!l.get_cancel()){this.showInsertFormAt(k);
}}return false;
},_onAppointmentDeleteClick:function(l){if(!this.get_readOnly()){var k=this.getAppointmentFromDomElement(l.eventMapTarget);
this._deleteAppointment(k);
}l.preventDefault();
},_deleteAppointment:function(k){if(!k){return;
}var l={OnConfirm:this._onAppointmentDeleteCallback,Scheduler:this,Appointment:k,CallbackIsCalledFromDialog:true};
this._showDeleteConfirmationDialog(l);
},_showDeleteConfirmationDialog:function(n){if(n.Appointment._recurrenceState==1||n.Appointment._recurrenceState==2||n.Appointment._recurrenceState==3){var l=new b.SchedulerRecurrenceActionDialogShowingEventArgs(n.Appointment,b.RecurrenceAction.Delete);
this._raise_recurrenceActionDialogShowing(l);
if(l.get_cancel()){var o=l.get_editSeries();
if(o!==null){n.CallbackIsCalledFromDialog=false;
n.OnConfirm(o,n);
}}else{b.RecurrenceActionDialog.Show(b.RecurrenceAction.Delete,n);
}}else{if(this.get_displayDeleteConfirmation()){var k=this.get_localization();
var m=$telerik.$.modal("#"+this.get_element().id+">.rsTopWrap");
m.initialize().set_content({title:k.ConfirmDeleteTitle,content:k.ConfirmDeleteText,ok:k.ConfirmOK,cancel:k.ConfirmCancel}).set_onActionConfirm(function(){n.OnConfirm(false,n);
m.hide();
}).show();
}else{n.CallbackIsCalledFromDialog=false;
n.OnConfirm(false,n);
}}},_onAppointmentDeleteCallback:function(m,l){if(l.CallbackIsCalledFromDialog){var k=new b.SchedulerRecurrenceActionDialogClosedEventArgs(l.Appointment,b.RecurrenceAction.Delete,m);
l.Scheduler._raise_recurrenceActionDialogClosed(k);
}var n=new b.SchedulerAppointmentDeletingEventArgs(l.Appointment,m);
l.Scheduler._raise_appointmentDeleting(n);
if(!n.get_cancel()){l.Scheduler.deleteAppointment(l.Appointment,m);
}},_onPreviousDayClick:function(n){n.stopPropagation();
n.preventDefault();
var l=new h.NavigationCommandEventArgs(b.SchedulerNavigationCommand.DisplayPreviousAppointmentSegment);
this.raiseEvent("NavigationCommand",l);
if(l.get_cancel()){return;
}if(this._renderingManager){return;
}var k=this.getAppointmentFromDomElement(n.eventMapTarget);
if(k){var m={Command:"GoToPrevious",AppointmentID:k._internalID};
this.postback(m);
}},_onNextDayClick:function(n){n.stopPropagation();
n.preventDefault();
var l=new h.NavigationCommandEventArgs(b.SchedulerNavigationCommand.DisplayNextAppointmentSegment);
this.raiseEvent("NavigationCommand",l);
if(l.get_cancel()){return;
}if(this._renderingManager){return;
}var k=this.getAppointmentFromDomElement(n.eventMapTarget);
if(k){var m={Command:"GoToNext",AppointmentID:k._internalID};
this.postback(m);
}},_onDayViewTabClick:function(k){k.preventDefault();
var l=new h.NavigationCommandEventArgs(b.SchedulerNavigationCommand.SwitchToDayView);
this.raiseEvent("NavigationCommand",l);
if(l.get_cancel()){return;
}if(this._renderingManager){this.set_selectedView(b.SchedulerViewType.DayView);
return;
}this.postback({Command:"SwitchToDayView"});
},_onWeekViewTabClick:function(m){m.preventDefault();
var k=new h.NavigationCommandEventArgs(b.SchedulerNavigationCommand.SwitchToWeekView);
this.raiseEvent("NavigationCommand",k);
if(k.get_cancel()){return;
}if(this._renderingManager){this.set_selectedView(b.SchedulerViewType.WeekView);
return;
}var l={Command:"SwitchToWeekView"};
this.postback(l);
},_onMonthViewTabClick:function(m){m.preventDefault();
var k=new h.NavigationCommandEventArgs(b.SchedulerNavigationCommand.SwitchToMonthView);
this.raiseEvent("NavigationCommand",k);
if(k.get_cancel()){return;
}if(this._renderingManager){this.set_selectedView(b.SchedulerViewType.MonthView);
return;
}var l={Command:"SwitchToMonthView"};
this.postback(l);
},_onTimelineViewTabClick:function(m){m.preventDefault();
var k=new h.NavigationCommandEventArgs(b.SchedulerNavigationCommand.SwitchToTimelineView);
this.raiseEvent("NavigationCommand",k);
if(k.get_cancel()){return;
}if(this._renderingManager){this.set_selectedView(b.SchedulerViewType.TimelineView);
return;
}var l={Command:"SwitchToTimelineView"};
this.postback(l);
},_onMultiDayViewTabClick:function(m){m.preventDefault();
var k=new h.NavigationCommandEventArgs(b.SchedulerNavigationCommand.SwitchToMultiDayView);
this.raiseEvent("NavigationCommand",k);
if(k.get_cancel()){return;
}if(this._renderingManager){this.set_selectedView(b.SchedulerViewType.MultiDayView);
return;
}var l={Command:"SwitchToMultiDayView"};
this.postback(l);
},_onPreviousSchedulerDayClick:function(m){m.preventDefault();
var k=new h.NavigationCommandEventArgs(b.SchedulerNavigationCommand.NavigateToPreviousPeriod);
this.raiseEvent("NavigationCommand",k);
if(k.get_cancel()){return;
}if(this._renderingManager){this.set_selectedDate(this._activeModel.get_previousPeriodDate());
this.raiseEvent("NavigationComplete",new h.NavigationCompleteEventArgs(b.SchedulerNavigationCommand.NavigateToPreviousPeriod));
return;
}var l={Command:"NavigateToPreviousPeriod"};
this.postback(l);
},_onNextSchedulerDayClick:function(m){m.preventDefault();
var k=new h.NavigationCommandEventArgs(b.SchedulerNavigationCommand.NavigateToNextPeriod);
this.raiseEvent("NavigationCommand",k);
if(k.get_cancel()){return;
}if(this._renderingManager){this.set_selectedDate(this._activeModel.get_nextPeriodDate());
this.raiseEvent("NavigationComplete",new h.NavigationCompleteEventArgs(b.SchedulerNavigationCommand.NavigateToNextPeriod));
return;
}var l={Command:"NavigateToNextPeriod"};
this.postback(l);
},_onTodayClick:function(n){n.preventDefault();
var k=f.getDate(new Date());
var l=new h.NavigationCommandEventArgs(b.SchedulerNavigationCommand.SwitchToSelectedDay,k);
this.raiseEvent("NavigationCommand",l);
if(l.get_cancel()){return;
}if(this._renderingManager){this.set_selectedDate(k);
this.raiseEvent("NavigationComplete",new h.NavigationCompleteEventArgs(b.SchedulerNavigationCommand.SwitchToSelectedDay));
return;
}var m={Command:"GoToToday"};
this.postback(m);
},_onFullTimeLinkClick:function(m){m.preventDefault();
var k=new h.NavigationCommandEventArgs(b.SchedulerNavigationCommand.SwitchFullTime);
this.raiseEvent("NavigationCommand",k);
if(k.get_cancel()){return;
}if(this._renderingManager){if(!this.get_activeModel()._isVertical){this.set_showFullTime(!this.get_showFullTime());
}this.raiseEvent("NavigationComplete",new h.NavigationCompleteEventArgs(b.SchedulerNavigationCommand.SwitchFullTime));
return;
}var l={Command:"SwitchFullTime"};
this.postback(l);
},postback:function(l){this._onContentScroll();
var k=this.get_postBackReference().replace("arguments",Sys.Serialization.JavaScriptSerializer.serialize(l));
eval(k);
},_getElementIndex:function(m,k){if(!m){return;
}for(var l=0;
l<m.length;
l++){if(m[l]===k){return l;
}}return -1;
},_getInlineTemplate:function(){if(!this._inlineTemplate){this._inlineTemplate=new b.InlineTemplate(this.get_element(),this.get_localization(),this._advancedFormSettings.enabled,this.get_minimumInlineFormWidth(),this.get_minimumInlineFormHeight());
var l=d("#"+this.get_element().id+" .rsAptEditSizingWrapper");
if(l.length){this._inlineTemplate.attachTo(l[0]);
}var k=Function.createDelegate(this,this._inlineFormSaveClicked);
this._inlineTemplate.add_saveClicked(k);
var n=Function.createDelegate(this,this._inlineFormMoreClicked);
this._inlineTemplate.add_moreClicked(n);
var m=Function.createDelegate(this,this._inlineFormKeyDown);
this._inlineTemplate.add_keyDown(m);
}return this._inlineTemplate;
},_inlineFormSaveClicked:function(k){var l=this._extractAppointmentFromInlineTemplate(k);
if(k.get_isInsert()){this.insertAppointment(l);
}else{this.updateAppointment(l,k.get_editSeries());
}},_inlineFormMoreClicked:function(k){var l=this._extractAppointmentFromInlineTemplate(k);
if(k.get_isInsert()){this._showAdvancedInsertForm(l);
}else{this.showAdvancedEditForm(l,k.get_editSeries());
}},_inlineFormKeyDown:function(l,k){if(k.keyCode==13&&(this.get_selectedSlots().length>0)){if(k.preventDefault){k.preventDefault();
}if(k.stopPropagation){k.stopPropagation();
}}},_extractAppointmentFromInlineTemplate:function(l){var k=l.get_element();
if(k.originalParent){k=k.originalParent;
}var n=new b.SchedulerAppointment();
n._internalID=l.get_appointmentInternalID();
if(l.get_isInsert()){var m=this._activeModel.getTimeSlotFromDomElement(k);
if(m.get_resource){n.get_resources().add(m.get_resource());
}}else{var o=this.get_appointments().find(function(p){return p.get_internalID()==n.get_internalID();
});
if(this._renderingManager){n=this.prepareToEdit(o,l.get_editSeries());
}else{o.get_resources().forEach(function(p){n.get_resources().add(p);
});
}}n.set_subject(l.get_text());
n.set_start(l.get_start());
n.set_end(l.get_end());
return n;
},_showAdvancedInsertForm:function(o,l,k){if(this._renderingManager){this._showAdvancedFormWrapper(d(this.get_element()).find("div.rsAdvancedInsertWrapper"));
this._advancedTemplate=this._getAdvancedInsertTemplate();
this._fireFormCreated(o,b.SchedulerFormMode.AdvancedInsert);
if(this._advancedTemplate){this._advancedTemplate.populate(o,true);
}return;
}var n=null;
var m=this.get_selectedSlots().length;
if(m>0){n=this.get_selectedSlots()[m-1].get_index();
}var p={command:"AdvancedInsert",appointment:this._getSerializableAppointment(o),startDate:o.get_start().format("yyyyMMddHHmm"),endDate:o.get_end().format("yyyyMMddHHmm"),lastSlotIndex:n};
if(l){p.command="AdvancedInsertRecurring";
p.targetSlotIndex=k.get_index();
}this.postback(p);
},_getAdvancedInsertTemplate:function(){if(!this._advancedInsertTemplate&&this._useDefaultAdvancedInsert){var m=this.get_element(),n=d(m),l=n.find("div.rsAdvancedInsertWrapper div.rsAdvancedEdit"),k=this.get_advancedFormSettings().modal;
this._advancedInsertTemplate=new b.Scheduling.AdvancedTemplate(m,l,k);
this._advancedInsertTemplate.initialize();
}return this._advancedInsertTemplate;
},_getAdvancedEditTemplate:function(){if(!this._advancedEditTemplate&&this._useDefaultAdvancedEdit){var m=this.get_element(),n=d(m),l=n.find("div.rsAdvancedEditWrapper div.rsAdvancedEdit"),k=this.get_advancedFormSettings().modal;
this._advancedEditTemplate=new b.Scheduling.AdvancedTemplate(m,l,k);
this._advancedEditTemplate.initialize();
}return this._advancedEditTemplate;
},_showAdvancedFormWrapper:function(m){if(m.parent().is(".RadScheduler")){return;
}this.hideInlineForm();
this.hideAdvancedForm();
var l=this.get_element(),k=d(l);
k.append(m);
if(this._advancedFormSettings.modal){m.css("position","static");
this._makeModal(m.find("div.rsAdvancedEdit")[0]);
}else{k.find("div.rsTopWrap").hide();
}},_makeModal:function(k){if(!this._advancedFormSettings.modal){return;
}var m=this.get_element(),n=d(m),l=d(k);
this._popupDialog=d.popupDialog(k,l.find(".rsAdvInnerTitle")[0],this._advancedFormSettings);
if(this._advancedFormSettings&&l.hasClass("rsAdvancedEdit")&&!l.hasClass("rsAdvancedModal")){l.addClass("rsAdvancedModal");
}n.find(".rsAdvFormWrap").css({display:"block"});
this._popupDialog.show();
if(this._popupDialog.legacyPositioning()){m.style.overflow="visible";
}},_getModelFactory:function(k){switch(k){case b.SchedulerViewType.DayView:return new b.Scheduler.DayModelFactory(this);
case b.SchedulerViewType.WeekView:return new b.Scheduler.WeekModelFactory(this);
case b.SchedulerViewType.MonthView:return new b.Scheduler.MonthModelFactory(this);
case b.SchedulerViewType.TimelineView:return new b.Scheduler.TimelineModelFactory(this);
case b.SchedulerViewType.MultiDayView:return new b.Scheduler.MultiDayModelFactory(this);
}},_setIndicatorState:function(l){var k=[],m=[];
d.each(l,function(n){k[n]=(this==1||this==3)?1:0;
m[n]=(this==2||this==3)?1:0;
});
this._aptTopIndicators=k;
this._aptBottomIndicators=m;
this._updateHiddenAppointmentsIndicator(this._aptTopIndicators,"top");
this._updateHiddenAppointmentsIndicator(this._aptBottomIndicators,"bottom");
},_updateHiddenAppointmentsIndicator:function(n,k){var m=k=="top"?"rsTopIndicator":"rsBottomIndicator";
this._removeIndicatorsTable(m);
for(var l=0;
l<n.length;
l++){if(n[l]>0){this._createIndicatorsTable(n,m);
return;
}}},_createIndicatorsTable:function(o,p){var n=d(this.get_element()).find(".rsTopWrap .rsContentScrollArea"),k=new Telerik.Web.StringBuilder(),m;
k.append("<table cellspacing='0' cellpadding='0' border='0' class='rsArrowContainer ").append(p).append("'><tr>");
for(var l=0;
l<o.length;
l++){k.append("<td>");
if(o[l]>0){k.append("<div class='rsArrowWrap'><a class='rsOvertimeArrow' href='#' /></div>");
}k.append("</td>");
}k.append("</tr></table>");
m=d(k.toString()).width(n.find(".rsContentTable").width());
n.append(m);
},_removeIndicatorsTable:function(k){d(this.get_element()).find(".rsTopWrap .rsContentScrollArea table."+k).remove();
},_doCallback:function(m,k){var l=Function.createDelegate(this,this._onCallbackResponse);
var n=Function.createDelegate(this,this._onCallbackError);
WebForm_DoCallback(this._uniqueId,m,l,k,n,true);
},_extractErrorMessage:function(k){if(k.get_message){return k.get_message();
}else{return k.replace(/(\d*\|.*)/,"");
}},_onCallbackError:function(m,k){var l=this._extractErrorMessage(m);
throw new Error(l);
},_onCallbackResponse:function(k,l){},_raise_dataBound:function(){this.raiseEvent("dataBound",Sys.EventArgs.Empty);
},_raise_appointmentCreated:function(k){this.raiseEvent("appointmentCreated",new b.AppointmentEventArgs(k));
},_raise_appointmentDataBound:function(k){this.raiseEvent("appointmentDataBound",k);
},_raise_appointmentInserting:function(k){this.raiseEvent("appointmentInserting",k);
},_raise_appointmentEditing:function(k){this.raiseEvent("appointmentEditing",k);
},_raise_appointmentDeleting:function(k){this.raiseEvent("appointmentDeleting",k);
},_raise_appointmentClick:function(k){this.raiseEvent("appointmentClick",k);
},_raise_appointmentDoubleClick:function(k){this.raiseEvent("appointmentDoubleClick",k);
},_raise_appointmentResizeStart:function(k){this.raiseEvent("appointmentResizeStart",k);
},_raise_appointmentResizing:function(k){this.raiseEvent("appointmentResizing",k);
},_raise_appointmentResizeEnd:function(k){this.raiseEvent("appointmentResizeEnd",k);
},_raise_appointmentContextMenu:function(k){this.raiseEvent("appointmentContextMenu",k);
},_raise_appointmentWebServiceInserting:function(k){this.raiseEvent("appointmentWebServiceInserting",k);
},_raise_appointmentWebServiceUpdating:function(k){this.raiseEvent("appointmentWebServiceUpdating",k);
},_raise_appointmentWebServiceDeleting:function(k){this.raiseEvent("appointmentWebServiceDeleting",k);
},_raise_appointmentsPopulating:function(k){this.raiseEvent("appointmentsPopulating",k);
},_raise_appointmentsPopulated:function(){this.raiseEvent("appointmentsPopulated",Sys.EventArgs.Empty);
},_raise_timeSlotClick:function(k){this.raiseEvent("timeSlotClick",k);
},_raise_timeSlotContextMenu:function(k){this.raiseEvent("timeSlotContextMenu",k);
},_raise_formCreated:function(k){this.raiseEvent("formCreated",k);
},_raise_recurrenceExceptionCreating:function(k){this.raiseEvent("recurrenceExceptionCreating",k);
},_raise_recurrenceExceptionsRemoving:function(k){this.raiseEvent("recurrenceExceptionsRemoving",k);
},_raise_recurrenceActionDialogShowing:function(k){this.raiseEvent("recurrenceActionDialogShowing",k);
},_raise_recurrenceActionDialogClosed:function(k){this.raiseEvent("recurrenceActionDialogClosed",k);
},_raise_resourcesPopulating:function(k){this.raiseEvent("resourcesPopulating",k);
},_raise_resourcesPopulated:function(){this.raiseEvent("resourcesPopulated",Sys.EventArgs.Empty);
},_raise_requestSuccess:function(k){this.raiseEvent("requestSuccess",k);
},_raise_requestFailed:function(k){this.raiseEvent("requestFailed",k);
}};
d.registerControlProperties(b.RadScheduler,{shouldPostbackOnAppointmentContextMenuItemClick:false,shouldPostbackOnTimeSlotContextMenuItemClick:false,appointmentContextMenuIDs:[],timeSlotContextMenuIDs:[]});
d.registerControlEvents(b.RadScheduler,["dataBound","appointmentCreated","appointmentDataBound","appointmentInserting","appointmentEditing","appointmentDeleting","appointmentClick","appointmentDoubleClick","appointmentResizeStart","appointmentResizing","appointmentResizeEnd","appointmentMoveStart","appointmentMoving","appointmentMoveEnd","appointmentSerialized","appointmentContextMenu","appointmentContextMenuItemClicking","appointmentContextMenuItemClicked","appointmentWebServiceInserting","appointmentWebServiceUpdating","appointmentWebServiceDeleting","appointmentsPopulating","appointmentsPopulated","timeSlotClick","timeSlotContextMenu","timeSlotContextMenuItemClicking","timeSlotContextMenuItemClicked","formCreated","recurrenceExceptionCreating","recurrenceExceptionsRemoving","recurrenceActionDialogShowing","recurrenceActionDialogClosed","reminderTriggering","reminderSnoozing","reminderDismissing","resourcesPopulating","resourcesPopulated","requestSuccess","requestFailed","navigationCommand","navigationComplete"]);
b.RadScheduler.registerClass("Telerik.Web.UI.RadScheduler",b.RadWebControl);
})();
Type.registerNamespace("Telerik.Web.UI");
Telerik.Web.UI.RecurrenceAction=function(){};
Telerik.Web.UI.RecurrenceAction.prototype={Edit:1,Delete:2,Resize:3,Move:4};
Telerik.Web.UI.RecurrenceAction.registerEnum("Telerik.Web.UI.RecurrenceAction");
(function(a){Telerik.Web.UI.RecurrenceActionDialog=function(){};
Telerik.Web.UI.RecurrenceActionDialog.Show=function(b,i){var c=i.Scheduler.get_localization();
var f="";
var h="";
var e="";
switch(b){case Telerik.Web.UI.RecurrenceAction.Delete:f=c.ConfirmRecurrenceDeleteOccurrence;
h=c.ConfirmRecurrenceDeleteSeries;
e=c.ConfirmRecurrenceDeleteTitle;
break;
case Telerik.Web.UI.RecurrenceAction.Edit:f=c.ConfirmRecurrenceEditOccurrence;
h=c.ConfirmRecurrenceEditSeries;
e=c.ConfirmRecurrenceEditTitle;
break;
case Telerik.Web.UI.RecurrenceAction.Resize:f=c.ConfirmRecurrenceResizeOccurrence;
h=c.ConfirmRecurrenceResizeSeries;
e=c.ConfirmRecurrenceResizeTitle;
break;
case Telerik.Web.UI.RecurrenceAction.Move:f=c.ConfirmRecurrenceMoveOccurrence;
h=c.ConfirmRecurrenceMoveSeries;
e=c.ConfirmRecurrenceMoveTitle;
break;
}var d=a.modal("#"+i.Scheduler.get_element().id+">.rsTopWrap");
var g=['<label><input type="radio" id="choiceOccurrenceSpan_0" name="choiceOccurrenceSpan" value="occurrence" checked="checked" />',f,"</label>",'<label><input type="radio" id="choiceOccurrenceSpan_1" name="choiceOccurrenceSpan" value="series" />',h,"</label>"];
d.initialize().set_content({title:e,content:g.join(""),ok:c.ConfirmOK,cancel:c.ConfirmCancel}).set_onActionConfirm(function(l,j){var k=a(d.get_element()).find("input[name=choiceOccurrenceSpan]:checked").val()=="series";
i.OnConfirm(k,i);
d.dispose();
}).set_onActionCancel(function(){if(i.OnCancel){i.OnCancel(i);
}d.dispose();
}).show();
};
})($telerik.$);
Type.registerNamespace("Telerik.Web.UI");
Telerik.Web.UI.SchedulerResource=function(a){this._attributes=new Telerik.Web.UI.SchedulerAttributeCollection(this);
if(a){this._key=a.key;
this._type=a.type;
this._text=a.text;
this._internalKey=a.internalKey;
this._available=a.available;
this._cssClass=a.cssClass;
if(typeof(a.attributes)!="undefined"){this._attributes._load(a.attributes);
}}};
Telerik.Web.UI.SchedulerResource.prototype={get_key:function(){return this._key;
},set_key:function(a){this._key=a;
},get_type:function(){return this._type;
},set_type:function(a){this._type=a;
},get_text:function(){return this._text;
},set_text:function(a){this._text=a;
},get_available:function(){return this._available;
},set_available:function(a){this._available=a;
},get_cssClass:function(){return this._cssClass;
},set_cssClass:function(a){this._cssClass=a;
},_getInternalKey:function(){return this._internalKey;
},get_attributes:function(){return this._attributes;
}};
Telerik.Web.UI.SchedulerResource.registerClass("Telerik.Web.UI.SchedulerResource");
Type.registerNamespace("Telerik.Web.UI");
(function(){var a=Telerik.Web.UI;
a.SchedulerResourceCollection=function(){this._array=new Array();
};
a.SchedulerResourceCollection.prototype={add:function(c){var b=this._array.length;
this.insert(b,c);
},insert:function(b,c){Array.insert(this._array,b,c);
},remove:function(b){Array.remove(this._array,b);
},removeAt:function(b){var c=this.getResource(b);
if(c){this.remove(c);
}},indexOf:function(d){for(var b=0,c=this._array.length;
b<c;
b++){if(this._array[b]===d){return b;
}}return -1;
},removeResourcesByType:function(c){var b=this;
this.getResourcesByType(c).forEach(function(d){b.remove(d);
});
},clear:function(){this._array=new Array();
},get_count:function(){return this._array.length;
},forEach:function(d){for(var c=0,b=this.get_count();
c<b;
c++){d(this.getResource(c));
}},getResource:function(b){return this._array[b];
},getResourcesByType:function(b){return this.findAll(function(c){return c.get_type()==b;
});
},getResourceByType:function(d){for(var c=0,b=this.get_count();
c<b;
c++){var e=this.getResource(c);
if(e.get_type()==d){return e;
}}return null;
},findAll:function(c){var b=new a.SchedulerResourceCollection();
this.forEach(function(d){if(c(d)){b.add(d);
}});
return b;
},getResourceByTypeAndKey:function(c,b){return this.findAll(function(d){return d.get_type()==c&&d.get_key()==b;
}).getResource(0)||null;
},clone:function(){var b=new a.SchedulerResourceCollection();
this.forEach(function(c){b.add(c);
});
return b;
}};
a.SchedulerResourceCollection.registerClass("Telerik.Web.UI.SchedulerResourceCollection");
}());
(function(){Type.registerNamespace("Telerik.Web.UI");
var a=Telerik.Web.UI;
a.ResourceType=function(b){if(b){this._name=b.name;
this._allowMultipleValues=b.allowMultipleValues||false;
}};
a.ResourceType.prototype={get_name:function(){return this._name;
},set_name:function(b){this._name=b;
},get_allowMultipleValues:function(){return this._allowMultipleValues;
},set_allowMultipleValues:function(b){this._allowMultipleValues=b;
}};
a.ResourceType.registerClass("Telerik.Web.UI.ResourceType");
})();
(function(){Type.registerNamespace("Telerik.Web.UI");
var a=Telerik.Web.UI;
a.ResourceTypeCollection=function(){this._array=[];
};
a.ResourceTypeCollection.prototype={add:function(c){var b=this._array.length;
this.insert(b,c);
},insert:function(b,c){Array.insert(this._array,b,c);
},remove:function(b){Array.remove(this._array,b);
},removeAt:function(b){var c=this.getResourceType(b);
if(c){this.remove(c);
}},clear:function(){this._array=[];
},get_count:function(){return this._array.length;
},forEach:function(d){for(var c=0,b=this.get_count();
c<b;
c++){d(this.getResourceType(c));
}},getResourceType:function(b){return this._array[b];
},getResourceTypeByName:function(b){return this.findAll(function(c){return c.get_name()==b;
}).getResourceType(0)||null;
},findAll:function(c){var b=new a.ResourceTypeCollection();
this.forEach(function(d){if(c(d)){b.add(d);
}});
return b;
}};
a.ResourceTypeCollection.registerClass("Telerik.Web.UI.ResourceTypeCollection");
}());
Type.registerNamespace("Telerik.Web.UI");
(function(){var a=Telerik.Web.UI;
a.SchedulerAttributeCollection=function(){this._data={};
this._keys=[];
};
a.SchedulerAttributeCollection.prototype={getAttribute:function(b){return this._data[b];
},setAttribute:function(d,b){this._add(d,b);
var c={};
c[d]=b;
},forEach:function(e){for(var c=0,b=this.get_count();
c<b;
c++){var d=this._keys[c];
e(d,this.getAttribute(d));
}},removeAttribute:function(b){Array.remove(this._keys,b);
delete this._data[b];
},get_count:function(){return this._keys.length;
},clear:function(){this._data={};
this._keys=[];
},clone:function(){var b=new a.SchedulerAttributeCollection();
this.forEach(function(c,d){b.setAttribute(c,d);
});
return b;
},_add:function(b,c){if(Array.indexOf(this._keys,b)<0){Array.add(this._keys,b);
}this._data[b]=c;
},_load:function(b){for(var c in b){this._add(c,b[c]);
}}};
a.SchedulerAttributeCollection.registerClass("Telerik.Web.UI.SchedulerAttributeCollection");
}());
Type.registerNamespace("Telerik.Web.UI");
Type.registerNamespace("Telerik.Web.UI.Scheduler.Views");
(function(a,b){a.ModelFactory=function(c){this._owner=c;
};
a.ModelFactory.prototype={createModel:function(){throw Error.notImplemented();
},_getGroupBy:function(){throw Error.notImplemented();
},_getGroupByDate:function(){return/^\s*date\s*/i.test(this._getGroupBy());
},_getGroupingResourceName:function(){var d=this._getGroupBy();
if(d.trim().toLowerCase()=="date"){throw Error.argument("groupBy","groupBy property should be in one of the following formats: <[Resource name]> or <Date,[Resource name]>. Using only <Date> is not allowed. ");
}var c=d.split(",");
if(c.length>2){throw Error.argument("groupBy","GroupBy property should be in one of the following formats: <[Resource name]> or <Date,[Resource name]> ");
}if(this._getGroupByDate()){if(c.length==2){return c[1].trim();
}return"";
}return c[0].trim();
},_getEnableGrouping:function(){return this._getGroupBy()!="";
}};
a.ModelFactory.registerClass("Telerik.Web.UI.Scheduler.ModelFactory");
a.DayModelFactory=function(c){a.DayModelFactory.initializeBase(this,[c]);
};
a.DayModelFactory.prototype={createModel:function(){if(this._getEnableGrouping()){var c=this._owner.get_dayViewSettings().isVertical||false;
if(this._getGroupByDate()){c=false;
}return new a.ResourceGroupedDayModel(this._owner,this._getGroupingResourceName(),c);
}return new a.DayModel(this._owner);
},_getGroupBy:function(){return this._owner.get_dayViewSettings().groupBy||"";
}};
a.DayModelFactory.registerClass("Telerik.Web.UI.Scheduler.DayModelFactory",a.ModelFactory);
a.WeekModelFactory=function(c){a.WeekModelFactory.initializeBase(this,[c]);
};
a.WeekModelFactory.prototype={createModel:function(){if(this._getEnableGrouping()){var c=this._owner.get_weekViewSettings().isVertical||false;
if(this._getGroupByDate()){return new a.DateGroupedWeekModel(this._owner,this._getGroupingResourceName(),c);
}else{return new a.ResourceGroupedWeekModel(this._owner,this._getGroupingResourceName(),c);
}}return new a.WeekModel(this._owner);
},_getGroupBy:function(){return this._owner.get_weekViewSettings().groupBy||"";
}};
a.WeekModelFactory.registerClass("Telerik.Web.UI.Scheduler.WeekModelFactory",a.ModelFactory);
a.MultiDayModelFactory=function(c){a.MultiDayModelFactory.initializeBase(this,[c]);
};
a.MultiDayModelFactory.prototype={createModel:function(){if(this._getEnableGrouping()){var c=this._owner.get_multiDayViewSettings().isVertical||false;
if(this._getGroupByDate()){return new a.DateGroupedMultiDayModel(this._owner,this._getGroupingResourceName(),c);
}else{return new a.ResourceGroupedMultiDayModel(this._owner,this._getGroupingResourceName(),c);
}}return new a.MultiDayModel(this._owner);
},_getGroupBy:function(){return this._owner.get_multiDayViewSettings().groupBy||"";
}};
a.MultiDayModelFactory.registerClass("Telerik.Web.UI.Scheduler.MultiDayModelFactory",a.ModelFactory);
a.MonthModelFactory=function(c){a.MonthModelFactory.initializeBase(this,[c]);
};
a.MonthModelFactory.prototype={createModel:function(){if(this._getEnableGrouping()){var c=this._owner.get_monthViewSettings().isVertical||false;
if(this._getGroupByDate()){return new b.Month.GroupedByDate.Model(this._owner,this._getGroupingResourceName(),c);
}else{return new b.Month.GroupedByResource.Model(this._owner,this._getGroupingResourceName(),c);
}}return new b.Month.Model(this._owner);
},_getGroupBy:function(){return this._owner.get_monthViewSettings().groupBy||"";
}};
a.MonthModelFactory.registerClass("Telerik.Web.UI.Scheduler.MonthModelFactory",a.ModelFactory);
a.TimelineModelFactory=function(c){a.TimelineModelFactory.initializeBase(this,[c]);
};
a.TimelineModelFactory.prototype={createModel:function(){if(this._getEnableGrouping()){var c=this._owner.get_timelineViewSettings().isVertical||false;
if(this._getGroupByDate()){return new b.Timeline.GroupedByDate.Model(this._owner,this._getGroupingResourceName(),c);
}else{return new b.Timeline.GroupedByResource.Model(this._owner,this._getGroupingResourceName(),c);
}}return new b.Timeline.Model(this._owner);
},_getGroupBy:function(){return this._owner.get_timelineViewSettings().groupBy||"";
}};
a.TimelineModelFactory.registerClass("Telerik.Web.UI.Scheduler.TimelineModelFactory",a.ModelFactory);
})(Telerik.Web.UI.Scheduler,Telerik.Web.UI.Scheduler.Views);
(function(){var a=Telerik.Web.UI;
var b;
a.SchedulerWebServiceSettings=function(c){a.SchedulerWebServiceSettings.initializeBase(this,[c]);
if(!this._method){this._method="GetAppointments";
}if(c.deleteAppointmentMethod!=b){this._deleteAppointmentMethod=c.deleteAppointmentMethod;
}else{this._deleteAppointmentMethod="DeleteAppointment";
}if(c.insertAppointmentMethod!=b){this._insertAppointmentMethod=c.insertAppointmentMethod;
}else{this._insertAppointmentMethod="InsertAppointment";
}if(c.updateAppointmentMethod!=b){this._updateAppointmentMethod=c.updateAppointmentMethod;
}else{this._updateAppointmentMethod="UpdateAppointment";
}if(c.getResourcesMethod!=b){this._getResourcesMethod=c.getResourcesMethod;
}else{this._getResourcesMethod="GetResources";
}if(c.createRecurrenceExceptionMethod!=b){this._createRecurrenceExceptionMethod=c.createRecurrenceExceptionMethod;
}else{this._createRecurrenceExceptionMethod="CreateRecurrenceException";
}if(c.removeRecurrenceExceptionsMethod!=b){this._removeRecurrenceExceptionsMethod=c.removeRecurrenceExceptionsMethod;
}else{this._removeRecurrenceExceptionsMethod="RemoveRecurrenceExceptions";
}if(c.resourcesPopulated!=b){this._resourcesPopulated=c.resourcesPopulated;
}else{this._resourcesPopulated=true;
}};
a.SchedulerWebServiceSettings.prototype={get_getAppointmentsMethod:function(){return this._method;
},set_getAppointmentsMethod:function(c){this._method=c;
},get_deleteAppointmentMethod:function(){return this._deleteAppointmentMethod;
},set_deleteAppointmentMethod:function(c){this._deleteAppointmentMethod=c;
},get_insertAppointmentMethod:function(){return this._insertAppointmentMethod;
},set_insertAppointmentMethod:function(c){this._insertAppointmentMethod=c;
},get_updateAppointmentMethod:function(){return this._updateAppointmentMethod;
},set_updateAppointmentMethod:function(c){this._updateAppointmentMethod=c;
},get_getResourcesMethod:function(){return this._getResourcesMethod;
},set_getResourcesMethod:function(c){this._getResourcesMethod=c;
},get_createRecurrenceExceptionMethod:function(){return this._createRecurrenceExceptionMethod;
},set_createRecurrenceExceptionMethod:function(c){this._createRecurrenceExceptionMethod=c;
},get_removeRecurrenceExceptionsMethod:function(){return this._removeRecurrenceExceptionsMethod;
},set_removeRecurrenceExceptionsMethod:function(c){this._removeRecurrenceExceptionsMethod=c;
},get_resourcesPopulated:function(){return this._resourcesPopulated;
},set_resourcesPopulated:function(c){this._resourcesPopulated=c;
},get_isEmpty:function(){return a.SchedulerWebServiceSettings.callBaseMethod(this,"get_isEmpty");
}};
a.SchedulerWebServiceSettings.registerClass("Telerik.Web.UI.SchedulerWebServiceSettings",a.WebServiceSettings);
})();
Type.registerNamespace("Telerik.Web.UI");
(function(a){a.ISchedulerModel=function(){};
a.ISchedulerModel.prototype={getTimeSlotFromDomElement:function(b){throw Error.notImplemented();
},getTimeSlotForAppointment:function(b){throw Error.notImplemented();
},get_isAllDayAppointment:function(b){throw Error.notImplemented();
},updateResizingAppointmentSize:function(b,c){},get_supportsSlotSelection:function(){return false;
},get_visibleRangeStart:function(){throw Error.notImplemented();
},get_visibleRangeEnd:function(){throw Error.notImplemented();
}};
a.ISchedulerModel.registerInterface("Telerik.Web.UI.ISchedulerModel");
a.ISchedulerTimeSlot=function(){};
a.ISchedulerTimeSlot.prototype={get_index:function(){throw Error.notImplemented();
},get_isAllDay:function(){throw Error.notImplemented();
},get_startTime:function(){throw Error.notImplemented();
},get_endTime:function(){throw Error.notImplemented();
},get_duration:function(){throw Error.notImplemented();
},get_durationInMinutes:function(){throw Error.notImplemented();
},get_domElement:function(){throw Error.notImplemented();
}};
a.ISchedulerTimeSlot.registerInterface("Telerik.Web.UI.ISchedulerTimeSlot");
})(Telerik.Web.UI);
(function(){var i=Telerik.Web.UI.Scheduler;
var f=$telerik.$;
var d=null;
var b={next:1,previous:0};
var c={inline:1,full:0};
var h=-1;
var j={save:0,cancel:1,options:2};
var g={del:1,edit:1};
var a=null;
var e={_cancelClicked:function(){var k=".rsAdvEditCancel";
if(h==c.inline){var l=new Function(f(k,d.get_element()).attr("href").split(":")[1]);
l();
}else{f(k,d.get_element()).click();
}},_saveClicked:function(){var l=".rsAdvEditSave";
if(h==c.inline){var k=new Function(f(l,d.get_element()).attr("href").split(":")[1]);
k();
}else{f(l,d.get_element()).click();
}},_moreClicked:function(){}};
i.KeyboardNavigation=function(m){d=m;
var l=!d.get_webServiceSettings().get_isEmpty();
this._tabNavigator=new i.KeyboardNavigation.Modules.TabNavigator();
this._commandsModule=new i.KeyboardNavigation.Modules.Commands();
this._commandsModule.bind({onAppointmentCommand:function(o){if(this._tabNavigator.get_selectedAppointment()){if(o==g.edit){var n={eventMapTarget:this._tabNavigator.get_selectedAppointment().get_element()};
d._onAppointmentDoubleClick(n);
}else{}}},onViewChange:function(o){var n=Telerik.Web.UI.SchedulerViewType;
switch(o){case n.DayView:d._onDayViewTabClick(f.Event("click"));
break;
case n.WeekView:d._onWeekViewTabClick(f.Event("click"));
break;
case n.MonthView:d._onMonthViewTabClick(f.Event("click"));
break;
}},onEditFormCommand:function(n){switch(n){case 0:a._saveClicked();
f(d.get_element()).focus();
break;
case 1:a._cancelClicked();
f(d.get_element()).focus();
break;
case 2:if(h==c.inline){a._moreClicked();
if(l){this._commandsModule.trigger("onEditFormShown",e,c.full);
}}break;
}},onEditFormShown:function(n,o){var p=o!=undefined?o:c.inline;
this._commandsModule.set_editForm(n);
this._commandsModule.set_editFormType(p);
},onTimeFrameChange:function(n){if(n==1){d._onNextSchedulerDayClick(f.Event("click"));
}else{d._onPreviousSchedulerDayClick(f.Event("click"));
}},onNavigation:function(){this._tabNavigator.reset();
}},this);
this._navigator=new i.KeyboardNavigation.Modules.Navigator(this._commandsModule);
if(!f(".rsAdvancedEdit",d.get_element()).is(":visible")){this._navigator.init();
}else{this._commandsModule.trigger("onEditFormShown",e);
}var k=this;
if(l){d.add_navigationComplete(function(n,o){k.reset(o);
});
}};
i.KeyboardNavigation.prototype={_getNav:function(){return this._getNavigatorModel.get_nav();
},_getNavigator:function(){return this._navigator;
},_getNavigatorModel:function(){return this._getNavigator().get_model();
},_getCommandsModule:function(){return this._commandsModule;
},_getTabNavigator:function(){return this._tabNavigator;
},dispose:function(){this._commandsModule=null;
this._navigator=null;
},reset:function(l){setTimeout(function(){Telerik.Web.UI.Scheduler.KeyboardNavigation.Models.reset();
},10);
var k=this;
if(l&&l.get_command()<=3){setTimeout(function(){k._navigator.init();
},600);
}this._tabNavigator.reset();
},parse:function(n){if(f(n.target).is("td")){n.preventDefault();
}var l=this._getNavigator();
var m=this._getCommandsModule();
var k=this._getTabNavigator();
if(!l.isCommandKey(n)){if(l.isNavigationCommand(n)&&!m.get_isEditing()&&l.get_model()){m.trigger("onNavigation");
l.get_model().handle(n);
}else{if(k.isTabCommand(n)&&!m.get_isEditing()&&l.get_model()){k.handle(n);
}else{m.handle(n);
}}}}};
i.KeyboardNavigation.Modules={};
i.KeyboardNavigation.Models={};
(function(){var k=i.KeyboardNavigation.Modules;
k.makeEventHandler=function(l){(function(){var m={};
f.extend(l,{bind:function(p,o){f.each(p,function(r,q){n(r,q,o);
});
},trigger:function(p){var r=m[p];
for(var o=0;
o<r.length;
o++){var q=Array.prototype.slice.call(arguments);
q.shift();
r[o].upload.apply(r[o].context,q);
}}});
function n(p,q,o){var r=m[p]||[];
r.push({upload:q,context:o});
m[p]=r;
}})();
};
k.Commands=function(){k.makeEventHandler(this);
var m=Telerik.Web.UI.SchedulerViewType;
var l=false;
f.extend(this,{handle:function(n){if(n.altKey){this._handleAltKey(n);
}else{if(n.ctrlKey){this._handleCtrlKey(n);
}else{switch(n.keyCode){case Sys.UI.Key.enter:this.trigger("onAppointmentCommand",g.edit);
break;
case Sys.UI.Key.del:this.trigger("onAppointmentCommand",g.del);
break;
case 27:if(l){l=false;
a._cancelClicked();
}break;
}}}},set_editForm:function(n){a=n;
l=true;
},set_editFormType:function(n){h=n;
},get_isEditing:function(){return l;
},set_isEditing:function(n){l=n;
},_handleAltKey:function(n){switch(n.keyCode){case 107:case 187:this.trigger("onViewChange",m.MonthView);
break;
case 109:case 189:this.trigger("onViewChange",m.WeekView);
break;
case 83:this.set_isEditing(false);
this.trigger("onEditFormCommand",j.save);
break;
case 67:this.set_isEditing(false);
this.trigger("onEditFormCommand",j.cancel);
break;
case 79:this.trigger("onEditFormCommand",j.options);
break;
default:if(n.keyCode>=48&&n.keyCode<=57){this.trigger("onViewChange",m.DayView);
}break;
}switch(d.get_selectedView()){case m.WeekView:switch(n.keyCode){case Sys.UI.Key.down:this.trigger("onTimeFrameChange",b.next);
break;
case Sys.UI.Key.up:this.trigger("onTimeFrameChange",b.previous);
break;
}break;
case m.MonthView:switch(n.keyCode){case Sys.UI.Key.pageDown:this.trigger("onTimeFrameChange",b.next);
break;
case Sys.UI.Key.pageUp:this.trigger("onTimeFrameChange",b.previous);
break;
}break;
}},_handleCtrlKey:function(n){switch(d.get_selectedView()){case m.DayView:switch(n.keyCode){case Sys.UI.Key.left:this.trigger("onTimeFrameChange",b.previous);
break;
case Sys.UI.Key.right:this.trigger("onTimeFrameChange",b.next);
break;
}break;
}}});
};
k.Navigator=function(l){this._model=null;
this._commandsModule=l;
};
k.Navigator.prototype={init:function(){this._model=i.KeyboardNavigation.Models.getModel(d.get_selectedView());
if(this._model){k.makeEventHandler(this._model);
this._model.bind({onRowSelection:function(l){if(d._rowSelectionState.selectedSlots.length>0){d._processRowSelection(l.get_domElement());
}}},this);
this._model._commandsModule=this._commandsModule;
}},get_model:function(){return this._model;
},isNavigationCommand:function(n){var l=n.keyCode;
var m=n.altKey||n.ctrlKey;
if(m){n.preventDefault();
}return !m&&(l==Sys.UI.Key.down||l==Sys.UI.Key.up||l==Sys.UI.Key.left||l==Sys.UI.Key.right);
},isCommandKey:function(l){return(l.keyCode==16||l.keyCode==17||l.keyCode==18);
}};
k.TabNavigator=function(){var l=null;
var m=new k.TabNavigator.appointmentsWrapper();
d.add_appointmentClick(function(n,o){l=o.get_appointment();
});
f.extend(this,{isTabCommand:function(n){return n.keyCode==9&&(f(n.target).hasClass("RadScheduler")||f(n.target).parents().hasClass("RadScheduler"));
},handle:function(n){n.preventDefault();
m.update(n);
var o=m.get_nextAppointment();
if(o){o.set_selected(true);
if(l){l.set_selected(false);
}l=o;
}},reset:function(){if(l){l.set_selected(false);
l=null;
}},get_selectedAppointment:function(){return l;
},get_wrapper:function(){return m;
}});
};
k.TabNavigator.appointmentsWrapper=function(){this._array=null;
this._sorted=false;
this._currentIndex=-1;
this.init();
};
k.TabNavigator.appointmentsWrapper.prototype={init:function(){this._array=[];
var n=d.get_appointments()._array;
var m=n.length;
for(var l=0;
l<m;
l++){this._array[l]=n[l];
}if(!d.get_webServiceSettings().get_isEmpty()){d.add_appointmentInserting(function(q,p){var o=this;
setTimeout(function(){o._sort(o._array);
},500);
});
}},update:function(l){if(!l.shiftKey){this._currentIndex++;
}else{this._currentIndex--;
}var m=this._array.length;
if(this._currentIndex<0){this._currentIndex=m-1;
}else{if(this._currentIndex>(m-1)){this._currentIndex=0;
}}},get_sortedAppointments:function(){if(!this._sorted){this._array=this._sort(this._array);
this._sorted=true;
}return this._array;
},get_nextAppointment:function(){return this.get_sortedAppointments()[this._currentIndex];
},_identifyDirection:function(l){if(l.shiftKey){return -1;
}else{return 1;
}},_sort:function(o){if(o.length<=1){return o;
}var n=[];
var l=[];
var m=o[Math.round(o.length/2)];
Array.remove(o,m);
for(var p=0;
p<o.length;
p++){if(o[p].get_start()<m.get_start()){n[n.length]=o[p];
}else{l[l.length]=o[p];
}}return this._concat(this._sort(n),m,this._sort(l));
},_concat:function(n,m,o){var l=[];
var p=function(q){for(var r=0;
r<q.length;
r++){l[l.length]=q[r];
}};
p(n);
l[l.length]=m;
p(o);
return l;
}};
})();
(function(){var m=null;
var k=null;
var n=false;
var q=true;
var o={left:0,top:1,right:2,bottom:3};
function l(){var r=f(".rsContentScrollArea",d.get_element())[0];
k={rowHeight:parseInt(d.get_rowHeight()),scrollElement:r,scrollAreaHeight:f(r).height()};
}function p(){m={};
q=true;
var r=i.KeyboardNavigation.Models.createMap(d.get_activeModel()._getContentTable(),function(u){q=false;
var w=u.get_targetSlot().get_domElement();
var v=w.cellIndex;
var t=w.parentNode.rowIndex;
m.x=t;
m.y=v;
});
var s=d.get_activeModel();
m.map=r;
m.model=s;
m.slot=s.getTimeSlotFromDomElement(r[0][0]);
m.x=0;
m.y=0;
}i.KeyboardNavigation.Models.createMap=function(t,u){var x=t.getElementsByTagName("tr");
var v=new Array(x.length);
d.add_timeSlotClick(function(y,z){u(z);
});
for(var r=0;
r<x.length;
r++){var w=x[r].getElementsByTagName("td");
v[r]=new Array(w.length);
for(var s=0;
s<w.length;
s++){v[r][s]=w[s];
}}return v;
};
i.KeyboardNavigation.Models.reset=function(){q=true;
};
i.KeyboardNavigation.Models.select=function(){var r=m.model;
if(!n){d._clearSlotSelection();
}var s=r.getTimeSlotFromDomElement(m.map[m.x][m.y]);
i.KeyboardNavigation.Models.selectSlot(s);
m.slot=s;
};
i.KeyboardNavigation.Models.selectSlot=function(s){var r=d._rowSelectionState;
if(s&&s.set_selected){s.set_selected(true);
if(!n){r.rowSelectionStartSlot=s;
}r.isRowSelection=true;
r.selectedSlots.push(s);
}};
i.KeyboardNavigation.Models.updateScroll=function(){var t=k;
var r=(m.x+1)*t.rowHeight;
if(r>t.scrollAreaHeight){t.scrollElement.scrollTop+=t.rowHeight;
}else{if(t.scrollElement.scrollTop>0){t.scrollElement.scrollTop-=t.rowHeight;
}}};
i.KeyboardNavigation.Models.DayModel=function(){p();
l();
f.extend(this,{get_nav:function(){return m;
},handle:function(s){n=s.shiftKey;
var r=false;
switch(s.keyCode){case Sys.UI.Key.down:if(m.x<m.map.length-1){m.x++;
r=true;
this.down();
}break;
case Sys.UI.Key.up:if(m.x>0){m.x--;
r=true;
this.up();
}break;
case Sys.UI.Key.left:if(!n){this.left();
}break;
case Sys.UI.Key.right:if(!n){this.right();
}break;
}if(n&&r){this.trigger("onRowSelection",m.slot);
}},left:function(){this._commandsModule.trigger("onTimeFrameChange",b.previous);
},right:function(){this._commandsModule.trigger("onTimeFrameChange",b.next);
},up:function(){i.KeyboardNavigation.Models.select();
i.KeyboardNavigation.Models.updateScroll(true);
},down:function(){i.KeyboardNavigation.Models.select();
i.KeyboardNavigation.Models.updateScroll(false);
}});
};
i.KeyboardNavigation.Models.WeekModel=function(){p();
l();
var r={day:0,week:1};
f.extend(this,{get_nav:function(){return m;
},handle:function(s){n=s.shiftKey;
switch(s.keyCode){case Sys.UI.Key.down:if(m.x<m.map.length-1){m.x++;
currentDirection=o.bottom;
this.down();
}break;
case Sys.UI.Key.up:if(m.x>0){m.x--;
currentDirection=o.top;
this.up();
}break;
case Sys.UI.Key.left:if(q){m.y=m.map[0].length;
}if(m.y>0){m.y--;
this.left(r.day);
}else{if(!n){this.left(r.week);
}}break;
case Sys.UI.Key.right:if(q){m.y=-1;
}if(m.y<m.map[0].length-1){m.y++;
this.right(r.day);
}else{if(!n){this.right(r.week);
}}break;
}q=false;
if(n){this.trigger("onRowSelection",m.slot);
}},left:function(s){if(s==r.day){i.KeyboardNavigation.Models.select();
}else{this._commandsModule.trigger("onTimeFrameChange",b.previous);
}},right:function(s){if(s==r.day){i.KeyboardNavigation.Models.select();
}else{this._commandsModule.trigger("onTimeFrameChange",b.next);
}},up:function(){i.KeyboardNavigation.Models.select();
i.KeyboardNavigation.Models.updateScroll(true);
},down:function(){i.KeyboardNavigation.Models.select();
i.KeyboardNavigation.Models.updateScroll(false);
}});
};
i.KeyboardNavigation.Models.MonthModel=function(){p();
l();
var r={day:0,month:1};
f.extend(this,{get_nav:function(){return m;
},handle:function(s){n=s.shiftKey;
switch(s.keyCode){case Sys.UI.Key.down:if(m.x<m.map.length-1){m.x++;
currentDirection=o.bottom;
this.down();
}break;
case Sys.UI.Key.up:if(m.x>0){m.x--;
currentDirection=o.top;
this.up();
}break;
case Sys.UI.Key.left:if(q){m.y=m.map[0].length;
}if(m.y>0){m.y--;
this.left(r.day);
}else{if(m.x>0){m.x--;
m.y=m.map[0].length-1;
this.up();
}else{if(!n){this.left(r.month);
}}}break;
case Sys.UI.Key.right:if(q){m.y=-1;
}if(m.y<m.map[0].length-1){m.y++;
this.right(r.day);
}else{if(m.x<m.map.length){m.x++;
m.y=0;
this.down();
}else{if(!n){this.right(r.month);
}}}break;
}q=false;
if(n){this.trigger("onRowSelection",m.slot);
}},left:function(s){if(s==r.day){i.KeyboardNavigation.Models.select();
}else{this._commandsModule.trigger("onTimeFrameChange",b.previous);
}},right:function(s){if(s==r.day){i.KeyboardNavigation.Models.select();
}else{this._commandsModule.trigger("onTimeFrameChange",b.next);
}},up:function(){i.KeyboardNavigation.Models.select();
i.KeyboardNavigation.Models.updateScroll(true);
},down:function(){i.KeyboardNavigation.Models.select();
i.KeyboardNavigation.Models.updateScroll(false);
}});
};
i.KeyboardNavigation.Models.getModel=function(s){var r=Telerik.Web.UI.SchedulerViewType;
switch(s){case r.DayView:return new i.KeyboardNavigation.Models.DayModel();
break;
case r.WeekView:return new i.KeyboardNavigation.Models.WeekModel();
break;
case r.MonthView:return new i.KeyboardNavigation.Models.MonthModel();
break;
default:return null;
}};
})();
})();
