(function(){var g=$telerik.$;
var a=Telerik.Web.UI;
var e=a.Scheduler;
var l=a.RadScheduler.prototype;
var f=a.SchedulerAppointment.prototype;
var n=e.DateTime;
var j=60000;
var b=60*j;
var d=24*b;
var k=new Date(0);
var o;
function i(){var p=$get(this.get_id()+"_ReminderDialog");
if(!p||!this._isSchedulerContentRendered()){return;
}this._reminderPollInterval=5000;
this._reminderMaxAge=d*14;
this._snoozedReminders={};
this._appLoadReminderCallback=Function.createDelegate(this,this._appLoadReminders);
Sys.Application.add_load(this._appLoadReminderCallback);
}function h(){if(!this._isSchedulerContentRendered()){return;
}clearInterval(this._pollRemindersInterval);
}function c(s,p,q){var r="; expires="+q.toGMTString();
document.cookie=s+"="+p+r+"; path="+window.location.pathname;
}function m(t){var p=t+"=";
var u=document.cookie.split(";");
for(var q=0,r=u.length;
q<r;
q++){var s=u[q];
while(s.charAt(0)==" "){s=s.substring(1,s.length);
}if(s.indexOf(p)==0){return s.substring(p.length,s.length);
}}return null;
}l._appLoadReminders=function(){Sys.Application.remove_load(this._appLoadReminderCallback);
this._pollRemindersCallback=Function.createDelegate(this,this._pollReminders);
this._pollRemindersInterval=setInterval(this._pollRemindersCallback,this._reminderPollInterval);
this._initializeReminderDialog();
};
l._initializeReminderDialog=function(){var r=this._reminderDialog=$find(this.get_id()+"_ReminderDialog");
var p=r.get_element();
this._reminderDialogWrapper=g(p).parent();
this._reminderPopup=g.popupDialog(p,g(".rsRemTitleBar",p)[0],{modal:true,width:463});
if(this._reminderPopup.legacyPositioning()){this.get_element().style.overflow="visible";
}var q=Function.createDelegate(this,this._hideReminderDialog);
r.add_close(q);
var u=Function.createDelegate(this,this._dismissRemindersClicked);
r.add_dismiss(u);
var t=Function.createDelegate(this,this._openReminderItemClicked);
r.add_openItem(t);
var s=Function.createDelegate(this,this._snoozeReminderClicked);
r.add_snooze(s);
r.add_disposing(function(){r.remove_close(q);
r.remove_dismiss(u);
r.remove_openItem(t);
r.remove_snooze(s);
});
};
a.RadScheduler._plugins.push({onInitialize:i,onDispose:h});
l._pollReminders=function(){var p=this;
this.get_appointments().forEach(function(q){q.get_reminders().forEach(function(r){if(!(q.get_visible()||q._originallyVisible)){return;
}var v=r.get_triggerDate();
var t=n.subtract(v,new Date());
var u=-t>p._reminderMaxAge;
if(t<=0&&!u&&!r._triggerEventFired&&!p._isReminderSnoozed(r)&&!r._dismissed){r._triggerEventFired=true;
var s=g.raiseCancellableControlEvent(p,"reminderTriggering",{appointment:q,reminder:r});
if(!s){p._reminderDialog.registerReminder(r);
if(p._getFormElement()==null&&!p._dragging){p._showReminderDialog();
}}}});
});
};
l._showReminderDialog=function(){if(!this._reminderDialogShown){this._reminderDialogShown=true;
g(this._reminderDialogWrapper).show();
this._reminderPopup.show();
this._reminderDialog._getRemindersListBox().repaint();
}};
l._hideReminderDialog=function(){if(this._reminderDialogShown){this._reminderDialogShown=false;
g(this._reminderDialogWrapper).hide();
this._reminderPopup.close();
}};
l._dismissRemindersClicked=function(p,r){this._dismissReminders(r.get_reminders());
if(!r.get_hasMoreReminders()){this._hideReminderDialog();
}else{var q=this._reminderDialog._getRemindersListBox();
if(q.get_selectedItem().get_index()==0){q.get_items().getItem(1).select();
}else{q.get_items().getItem(0).select();
}}};
l._openReminderItemClicked=function(p,q){this.showAdvancedEditForm(q.get_reminders()[0].get_owner(),true);
this._hideReminderDialog();
};
l._snoozeReminderClicked=function(p,s){var r=s.get_minutes();
var q=s.get_reminders();
this._snoozeReminders(q,r);
this._hideReminderDialog();
};
l._snoozeReminders=function(x,p){if(!x.length){x=[x];
}var r=[];
for(var q=0;
q<x.length;
q++){var t=x[q];
var w=x[q].clone();
var v=w.get_owner();
var u=g.raiseCancellableControlEvent(this,"reminderSnoozing",{appointment:v,reminder:w});
if(!u){var s=(p<0)?n.add(v.get_start(),p*j):n.add(new Date(),p*j);
this._registerSnoozedReminder(t,s);
t._triggerEventFired=false;
if(!this._renderingManager){var y={Command:"SnoozeReminder",AppointmentInternalID:t.get_owner()._internalID,ReminderID:t.get_id(),SnoozeMinutes:p};
r.push(y);
}}}if(r.length>0){this._doCallback(Sys.Serialization.JavaScriptSerializer.serialize(r),this);
this._isDirty=true;
}};
l._registerSnoozedReminder=function(r,q){var p=this._getReminderCookieName(r);
this._snoozedReminders[r.get_id()]=q;
c(p,q.getTime(),q);
};
l._isReminderSnoozed=function(p){var s=this._getReminderCookieName(p);
var q=m(s);
var r=q||this._snoozedReminders[p.get_id()]||k;
if(r>new Date()){return true;
}else{this._snoozedReminders[p.get_id()]=o;
return false;
}};
l._getReminderCookieName=function(p){return this.get_id()+"_"+p.get_id();
};
l._dismissReminders=function(w){if(!w.length){w=[w];
}var q=[];
for(var p=0;
p<w.length;
p++){var v=w[p];
var u=v.get_owner();
var t=g.raiseCancellableControlEvent(this,"reminderDismissing",{appointment:v.get_owner(),reminder:v});
if(!t){v._dismissed=true;
if(this._renderingManager){var x=this.prepareToEdit(u,false);
var y=x.get_reminders().findByID(v.get_id());
x.get_reminders().remove(y);
this.updateAppointment(x);
}else{var s={Command:"DismissReminder",AppointmentInternalID:v.get_owner()._internalID,ReminderID:v.get_id()};
q.push(s);
}}g(".rsAptReminder",u.get_element()).hide();
}if(q.length>0){this._doCallback(Sys.Serialization.JavaScriptSerializer.serialize(q),this);
this._isDirty=true;
}};
f.get_reminders=function(){if(!this._reminders){this._reminders=new a.ReminderCollection(this);
if(this._serverData&&this._serverData.reminders){var p=this._serverData.reminders;
for(var q in p){this._reminders.add(new a.Reminder(p[q]));
}}}return this._reminders;
};
})();
Type.registerNamespace("Telerik.Web.UI");
(function(){var b=Telerik.Web.UI;
var f=b.Scheduler;
var e=f.DateTime;
var c=60000;
var a=60*c;
var g=24*a;
b.Reminder=function(h){this._attributes=new b.SchedulerAttributeCollection(this);
if(h){this._trigger=h.trigger;
this._id=h.id;
if(typeof(h.attributes)!="undefined"){this._attributes._load(h.attributes);
}}else{this.set_id(d());
}};
b.Reminder.prototype={get_trigger:function(){return this._trigger;
},set_trigger:function(h){this._trigger=h;
},get_id:function(){return this._id;
},set_id:function(h){this._id=h;
},get_attributes:function(){return this._attributes;
},get_owner:function(){return this._owner;
},_setOwner:function(h){this._owner=h;
},get_triggerDate:function(){var h=this.get_owner();
if(!h){return;
}return e.add(h.get_start(),-(this.get_trigger()*c));
},clone:function(){var h=new b.Reminder();
h.set_trigger(this.get_trigger());
h.set_id(this.get_id());
h._attributes=this.get_attributes().clone();
h._setOwner(this.get_owner());
return h;
}};
b.Reminder.registerClass("Telerik.Web.UI.Reminder");
function d(){var k=[];
var h="0123456789abcdef";
for(var j=0;
j<32;
j++){k[j]=h.substr(Math.floor(Math.random()*16),1);
}k[12]="4";
k[16]=h.substr((k[16]&3)|8,1);
Array.insert(k,8,"-");
Array.insert(k,13,"-");
Array.insert(k,18,"-");
Array.insert(k,23,"-");
var l=k.join("");
return l;
}})();
Type.registerNamespace("Telerik.Web.UI");
(function(){var a=Telerik.Web.UI;
a.ReminderCollection=function(b){this._array=[];
this._appointment=b;
};
a.ReminderCollection.prototype={add:function(c){var b=this._array.length;
this.insert(b,c);
c._setOwner(this._appointment);
},insert:function(b,c){Array.insert(this._array,b,c);
c._setOwner(this._appointment);
},remove:function(b){Array.remove(this._array,b);
},removeAt:function(b){var c=this.getReminder(b);
if(c){this.remove(c);
}},indexOf:function(d){for(var b=0,c=this._array.length;
b<c;
b++){if(this._array[b]===d){return b;
}}return -1;
},clear:function(){this._array=new Array();
},get_count:function(){return this._array.length;
},forEach:function(d){for(var c=0,b=this.get_count();
c<b;
c++){d(this.getReminder(c));
}},getReminder:function(b){return this._array[b];
},findAll:function(c){var b=new a.ReminderCollection();
this.forEach(function(d){if(c(d)){b.add(d);
}});
return b;
},findByID:function(b){var c=null;
this.forEach(function(d){if(d.get_id()==b){c=d;
}});
return c;
},clone:function(){var b=new a.ReminderCollection();
this.forEach(function(c){b.add(c.clone());
});
return b;
}};
a.ReminderCollection.registerClass("Telerik.Web.UI.ReminderCollection");
}());
